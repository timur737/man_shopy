{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ariet/project/pizza_shop/src/pages/SingUp.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { signUpUser, signUpUserSuccess, signUpUserFailure } from '../redux/actions/user';\nimport { useHistory } from 'react-router-dom';\nimport { TabAuth } from '../components';\nexport default function SingUp() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const {\n    error,\n    isAuth,\n    loading\n  } = useSelector(({\n    userReducer\n  }) => userReducer);\n  const history = useHistory(); // const validationSchema = yup.object().shape({\n  //   username: yup.string().required('Обезятельно'),\n  //   last_name: yup.string().required('Обезятельно'),\n  //   password: yup.string().required('Обезятельно'),\n  //   email: yup.string().email('Введите коректный Email').required('Обезятельно'),\n  // });\n\n  const onSubmit = values => {\n    console.log('Clicked ', loading); // dispatch(signUpUser(values))\n    //   .then(({ data }) => {\n    //     setTimeout(() => {\n    //       localStorage.setItem('token', JSON.stringify(data.auth_token));\n    //       dispatch(signUpUserSuccess(data));\n    //       history.push('./account');\n    //     }, 3000);\n    //   })\n    //   .catch((error) => {\n    //     dispatch(signUpUserFailure(error.message));\n    //   });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          ref: register({\n            required: true,\n            minLength: 3\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), errors.username && errors.username.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \"Username is required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), errors.username && errors.username.type === 'minLength' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \"Username should be at-least 6 characters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"last_name\",\n          ref: register({\n            required: true,\n            minLength: 3\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), errors.last_name && errors.last_name.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \"last_name is required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), errors.last_name && errors.last_name.type === 'minLength' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \"last_name should be at-least 3 characters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control \",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          ref: register({\n            required: true,\n            pattern: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), errors.email && errors.email.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          children: \"Email is required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), errors.email && errors.email.type === 'pattern' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          children: \"Email is not valid.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          ref: register({\n            required: true,\n            minLength: 6\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), errors.password && errors.password.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          children: \"Password is required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), errors.password && errors.password.type === 'minLength' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          children: \"Password should be at-least 6 characters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this); // return (\n  //   <div className=\"container\">\n  //     <TabAuth />\n  //     <Formik\n  //       initialValues={{\n  //         username: '',\n  //         last_name: '',\n  //         password: '',\n  //         email: '',\n  //       }}\n  //       validateOnBlur\n  //       validationSchema={validationSchema}\n  //       onSubmit={(values) => onHandleSumbit(values)}>\n  //       {({ values, errors, touched, handleBlur, handleChange, handleSubmit, isValid, dirty }) => (\n  //         <div className=\"form\">\n  //           <p>Имя</p>\n  //           <input\n  //             name=\"username\"\n  //             type=\"text\"\n  //             onChange={handleChange}\n  //             onBlur={handleBlur}\n  //             value={values.username}\n  //           />{' '}\n  //           <br />\n  //           {touched.username && errors.username && <p className=\"error\">{errors.username}</p>}\n  //           <br />\n  //           <p>Фамилия </p>\n  //           <input\n  //             name=\"last_name\"\n  //             type=\"text\"\n  //             onChange={handleChange}\n  //             onBlur={handleBlur}\n  //             value={values.last_name}\n  //           />{' '}\n  //           <br />\n  //           {touched.last_name && errors.last_name && <p className=\"error\">{errors.last_name}</p>}\n  //           <p>Пароль </p>\n  //           <input\n  //             name=\"password\"\n  //             type=\"password\"\n  //             onChange={handleChange}\n  //             onBlur={handleBlur}\n  //             value={values.password}\n  //           />\n  //           {touched.password && errors.password && <p className=\"error\">{errors.password}</p>}\n  //           <p>Email</p>\n  //           <input\n  //             name=\"email\"\n  //             type=\"email\"\n  //             onChange={handleChange}\n  //             onBlur={handleBlur}\n  //             value={values.email}\n  //           />\n  //           <br />\n  //           {touched.email && errors.email && <p className=\"error\">{errors.email}</p>}\n  //           <p className=\"error\">{error}</p>\n  //           {!loading ? (\n  //             <button disabled={!isValid && !dirty} onClick={handleSubmit} type=\"submit\">\n  //               Отправить\n  //             </button>\n  //           ) : (\n  //             <div> Loading... </div>\n  //           )}\n  //         </div>\n  //       )}\n  //     </Formik>\n  //   </div>\n  // );\n}\n\n_s(SingUp, \"qeBamvArC1Dw1vXud0ktz+n6E0g=\", false, function () {\n  return [useDispatch, useForm, useSelector, useHistory];\n});\n\n_c = SingUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingUp\");","map":{"version":3,"sources":["/home/ariet/project/pizza_shop/src/pages/SingUp.js"],"names":["React","yup","Formik","useDispatch","useSelector","useForm","signUpUser","signUpUserSuccess","signUpUserFailure","useHistory","TabAuth","SingUp","dispatch","register","handleSubmit","errors","error","isAuth","loading","userReducer","history","onSubmit","values","console","log","required","minLength","username","type","last_name","pattern","email","password"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\n\nimport { signUpUser, signUpUserSuccess, signUpUserFailure } from '../redux/actions/user';\nimport { useHistory } from 'react-router-dom';\nimport { TabAuth } from '../components';\n\nexport default function SingUp() {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, errors } = useForm();\n  const { error, isAuth, loading } = useSelector(({ userReducer }) => userReducer);\n\n  const history = useHistory();\n\n  // const validationSchema = yup.object().shape({\n  //   username: yup.string().required('Обезятельно'),\n  //   last_name: yup.string().required('Обезятельно'),\n  //   password: yup.string().required('Обезятельно'),\n  //   email: yup.string().email('Введите коректный Email').required('Обезятельно'),\n  // });\n\n  const onSubmit = (values) => {\n    console.log('Clicked ', loading);\n\n    // dispatch(signUpUser(values))\n    //   .then(({ data }) => {\n    //     setTimeout(() => {\n    //       localStorage.setItem('token', JSON.stringify(data.auth_token));\n    //       dispatch(signUpUserSuccess(data));\n    //       history.push('./account');\n    //     }, 3000);\n    //   })\n    //   .catch((error) => {\n    //     dispatch(signUpUserFailure(error.message));\n    //   });\n  };\n\n  return (\n    <div className=\"\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-control\">\n          <label>Username</label>\n          <input type=\"text\" name=\"username\" ref={register({ required: true, minLength: 3 })} />\n          {errors.username && errors.username.type === 'required' && (\n            <p className=\"error\">Username is required.</p>\n          )}\n          {errors.username && errors.username.type === 'minLength' && (\n            <p className=\"error\">Username should be at-least 6 characters.</p>\n          )}\n        </div>\n        <div className=\"form-control\">\n          <label>Фамилия</label>\n          <input type=\"text\" name=\"last_name\" ref={register({ required: true, minLength: 3 })} />\n          {errors.last_name && errors.last_name.type === 'required' && (\n            <p className=\"error\">last_name is required.</p>\n          )}\n          {errors.last_name && errors.last_name.type === 'minLength' && (\n            <p className=\"error\">last_name should be at-least 3 characters.</p>\n          )}\n        </div>\n        <div className=\"form-control \">\n          <label>Email</label>\n          <input\n            type=\"text\"\n            name=\"email\"\n            ref={register({\n              required: true,\n              pattern: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n            })}\n          />\n          {errors.email && errors.email.type === 'required' && (\n            <p className=\"errorMsg\">Email is required.</p>\n          )}\n          {errors.email && errors.email.type === 'pattern' && (\n            <p className=\"errorMsg\">Email is not valid.</p>\n          )}\n        </div>\n        <div className=\"form-control\">\n          <label>Password</label>\n          <input type=\"password\" name=\"password\" ref={register({ required: true, minLength: 6 })} />\n          {errors.password && errors.password.type === 'required' && (\n            <p className=\"errorMsg\">Password is required.</p>\n          )}\n          {errors.password && errors.password.type === 'minLength' && (\n            <p className=\"errorMsg\">Password should be at-least 6 characters.</p>\n          )}\n        </div>\n        <div className=\"form-control\">\n          <label></label>\n          <button type=\"submit\">Login</button>\n        </div>\n      </form>\n    </div>\n  );\n  // return (\n  //   <div className=\"container\">\n  //     <TabAuth />\n  //     <Formik\n  //       initialValues={{\n  //         username: '',\n  //         last_name: '',\n  //         password: '',\n  //         email: '',\n  //       }}\n  //       validateOnBlur\n  //       validationSchema={validationSchema}\n  //       onSubmit={(values) => onHandleSumbit(values)}>\n  //       {({ values, errors, touched, handleBlur, handleChange, handleSubmit, isValid, dirty }) => (\n  //         <div className=\"form\">\n  //           <p>Имя</p>\n  //           <input\n  //             name=\"username\"\n  //             type=\"text\"\n  //             onChange={handleChange}\n  //             onBlur={handleBlur}\n  //             value={values.username}\n  //           />{' '}\n  //           <br />\n  //           {touched.username && errors.username && <p className=\"error\">{errors.username}</p>}\n  //           <br />\n  //           <p>Фамилия </p>\n  //           <input\n  //             name=\"last_name\"\n  //             type=\"text\"\n  //             onChange={handleChange}\n  //             onBlur={handleBlur}\n  //             value={values.last_name}\n  //           />{' '}\n  //           <br />\n  //           {touched.last_name && errors.last_name && <p className=\"error\">{errors.last_name}</p>}\n  //           <p>Пароль </p>\n  //           <input\n  //             name=\"password\"\n  //             type=\"password\"\n  //             onChange={handleChange}\n  //             onBlur={handleBlur}\n  //             value={values.password}\n  //           />\n  //           {touched.password && errors.password && <p className=\"error\">{errors.password}</p>}\n  //           <p>Email</p>\n  //           <input\n  //             name=\"email\"\n  //             type=\"email\"\n  //             onChange={handleChange}\n  //             onBlur={handleBlur}\n  //             value={values.email}\n  //           />\n  //           <br />\n  //           {touched.email && errors.email && <p className=\"error\">{errors.email}</p>}\n  //           <p className=\"error\">{error}</p>\n  //           {!loading ? (\n  //             <button disabled={!isValid && !dirty} onClick={handleSubmit} type=\"submit\">\n  //               Отправить\n  //             </button>\n  //           ) : (\n  //             <div> Loading... </div>\n  //           )}\n  //         </div>\n  //       )}\n  //     </Formik>\n  //   </div>\n  // );\n}\n"]},"metadata":{},"sourceType":"module"}