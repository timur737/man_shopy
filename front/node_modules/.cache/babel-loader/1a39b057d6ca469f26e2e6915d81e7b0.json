{"ast":null,"code":"import axios from 'axios';\nconst url = 'https://jastegri.pythonanywhere.com';\nexport const signUpUser = user => dispatch => {\n  dispatch(signUpUserStarted());\n  return axios.post(`${url}/auth/users/`, user);\n};\n\nconst signUpUserStarted = () => ({\n  type: 'SIGNUP_USER'\n});\n\nexport const signUpUserSuccess = user => ({\n  type: 'SIGNUP_USER_SUCCESS',\n  payload: user\n});\nexport const signUpUserFailure = error => ({\n  type: 'SIGNUP_USER_FAILURE',\n  payload: error\n});\nexport const meFromToken = tokenFromStorage => dispatch => {\n  dispatch(meFromTokenStarted());\n  return axios.get(`${url}/auth/users/me/`, {\n    headers: {\n      Authorization: `Bearer ${tokenFromStorage}`\n    }\n  });\n};\n\nconst meFromTokenStarted = () => ({\n  type: 'ME_FROM_TOKEN'\n});\n\nexport const meFromTokenSuccess = user => ({\n  type: 'ME_FROM_TOKEN_SUCCESS',\n  payload: user\n});\nexport const meFromTokenFailure = error => ({\n  type: 'ME_FROM_TOKEN_FAILURE',\n  payload: error\n});\nexport const loginUser = user => dispatch => {\n  dispatch(loginUserStarted());\n  return axios.post(`${url}/login/`, user);\n};\n\nconst loginUserStarted = () => ({\n  type: 'LOGIN_USER'\n});\n\nexport const loginUserSuccess = user => ({\n  type: 'LOGIN_USER_SUCCESS',\n  payload: user\n});\nexport const loginUserFailure = error => ({\n  type: 'LOGIN_USER_FAILURE',\n  payload: error\n});\nexport const editUser = (user, id) => dispatch => {\n  dispatch(editUserStarted());\n  axios.put(`${url}/update-profile/${id}/`, {\n    username: user.username,\n    last_name: user.last_name,\n    email: user.email\n  }).then(({\n    data\n  }) => {\n    // localStorage.setItem('token', JSON.stringify(data.tokens));\n    dispatch(editUserSuccess(data));\n  }).catch(err => {\n    dispatch(editUserFailure(err.message));\n  });\n};\n\nconst editUserStarted = data => ({\n  type: 'EDIT_USER',\n  payload: data\n});\n\nexport const editUserSuccess = user => ({\n  type: 'EDIT_USER_SUCCESS',\n  payload: user\n});\nexport const editUserFailure = error => ({\n  type: 'EDIT_USER_FAILURE',\n  payload: error\n});\nexport const logoutUser = () => ({\n  type: 'LOGOUT_USER'\n});","map":{"version":3,"sources":["/home/ariet/project/pizza_shop/src/redux/actions/user.js"],"names":["axios","url","signUpUser","user","dispatch","signUpUserStarted","post","type","signUpUserSuccess","payload","signUpUserFailure","error","meFromToken","tokenFromStorage","meFromTokenStarted","get","headers","Authorization","meFromTokenSuccess","meFromTokenFailure","loginUser","loginUserStarted","loginUserSuccess","loginUserFailure","editUser","id","editUserStarted","put","username","last_name","email","then","data","editUserSuccess","catch","err","editUserFailure","message","logoutUser"],"mappings":"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","sourcesContent":["import axios from 'axios';\nconst url = 'https://jastegri.pythonanywhere.com';\n\nexport const signUpUser = (user) => (dispatch) => {\n  dispatch(signUpUserStarted());\n\n  return axios.post(`${url}/auth/users/`, user);\n};\n\nconst signUpUserStarted = () => ({\n  type: 'SIGNUP_USER',\n});\n\nexport const signUpUserSuccess = (user) => ({\n  type: 'SIGNUP_USER_SUCCESS',\n  payload: user,\n});\n\nexport const signUpUserFailure = (error) => ({\n  type: 'SIGNUP_USER_FAILURE',\n  payload: error,\n});\n\nexport const meFromToken = (tokenFromStorage) => (dispatch) => {\n  dispatch(meFromTokenStarted());\n\n  return axios.get(`${url}/auth/users/me/`, {\n    headers: { Authorization: `Bearer ${tokenFromStorage}` },\n  });\n};\n\nconst meFromTokenStarted = () => ({\n  type: 'ME_FROM_TOKEN',\n});\n\nexport const meFromTokenSuccess = (user) => ({\n  type: 'ME_FROM_TOKEN_SUCCESS',\n  payload: user,\n});\n\nexport const meFromTokenFailure = (error) => ({\n  type: 'ME_FROM_TOKEN_FAILURE',\n  payload: error,\n});\n\nexport const loginUser = (user) => (dispatch) => {\n  dispatch(loginUserStarted());\n  return axios.post(`${url}/login/`, user);\n};\n\nconst loginUserStarted = () => ({\n  type: 'LOGIN_USER',\n});\n\nexport const loginUserSuccess = (user) => ({\n  type: 'LOGIN_USER_SUCCESS',\n  payload: user,\n});\n\nexport const loginUserFailure = (error) => ({\n  type: 'LOGIN_USER_FAILURE',\n  payload: error,\n});\n\nexport const editUser = (user, id) => (dispatch) => {\n  dispatch(editUserStarted());\n\n  axios\n    .put(`${url}/update-profile/${id}/`, {\n      username: user.username,\n      last_name: user.last_name,\n      email: user.email,\n    })\n    .then(({ data }) => {\n      // localStorage.setItem('token', JSON.stringify(data.tokens));\n      dispatch(editUserSuccess(data));\n    })\n    .catch((err) => {\n      dispatch(editUserFailure(err.message));\n    });\n};\n\nconst editUserStarted = (data) => ({\n  type: 'EDIT_USER',\n  payload: data,\n});\n\nexport const editUserSuccess = (user) => ({\n  type: 'EDIT_USER_SUCCESS',\n  payload: user,\n});\n\nexport const editUserFailure = (error) => ({\n  type: 'EDIT_USER_FAILURE',\n  payload: error,\n});\n\nexport const logoutUser = () => ({\n  type: 'LOGOUT_USER',\n});\n"]},"metadata":{},"sourceType":"module"}