{"ast":null,"code":"import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst saveState = state => {\n  const serialisedState = JSON.stringify(state);\n  window.localStorage.setItem('app_state', serialisedState);\n};\n\nconst loadState = () => {\n  if (!serialisedState) return undefined;\n  return JSON.parse(serialisedState);\n};\n\nconst oldState = loadState();\nconst store = createStore(rootReducer, oldState, composeEnhancers(applyMiddleware(thunk)));\nstore.subscribe(() => {\n  saveState(store.getState());\n});\nexport default store;","map":{"version":3,"sources":["/home/ariet/project/pizza_shop/src/redux/store.js"],"names":["createStore","compose","applyMiddleware","thunk","rootReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","saveState","state","serialisedState","JSON","stringify","localStorage","setItem","loadState","undefined","parse","oldState","store","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CN,OAAxE;;AAEA,MAAMO,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;AACAH,EAAAA,MAAM,CAACO,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,EAAyCJ,eAAzC;AACD,CAHD;;AAKA,MAAMK,SAAS,GAAG,MAAM;AACtB,MAAI,CAACL,eAAL,EAAsB,OAAOM,SAAP;AACtB,SAAOL,IAAI,CAACM,KAAL,CAAWP,eAAX,CAAP;AACD,CAHD;;AAKA,MAAMQ,QAAQ,GAAGH,SAAS,EAA1B;AAEA,MAAMI,KAAK,GAAGnB,WAAW,CAACI,WAAD,EAAcc,QAAd,EAAwBb,gBAAgB,CAACH,eAAe,CAACC,KAAD,CAAhB,CAAxC,CAAzB;AAEAgB,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBZ,EAAAA,SAAS,CAACW,KAAK,CAACE,QAAN,EAAD,CAAT;AACD,CAFD;AAIA,eAAeF,KAAf","sourcesContent":["import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst saveState = (state) => {\n  const serialisedState = JSON.stringify(state);\n  window.localStorage.setItem('app_state', serialisedState);\n};\n\nconst loadState = () => {\n  if (!serialisedState) return undefined;\n  return JSON.parse(serialisedState);\n};\n\nconst oldState = loadState();\n\nconst store = createStore(rootReducer, oldState, composeEnhancers(applyMiddleware(thunk)));\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}