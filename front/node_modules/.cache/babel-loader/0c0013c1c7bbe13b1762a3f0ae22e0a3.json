{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ariet/project/pizza_shop/src/pages/Edit.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux'; // import { fetchUser } from '../redux/actions/registration';\n\nfunction Edit() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    username,\n    lastName,\n    email\n  } = useSelector(({\n    registration\n  }) => registration.currentUser);\n  const validationSchema = yup.object().shape({\n    username: yup.string().required('Обезятельно'),\n    last_name: yup.string().required('Обезятельно'),\n    password: yup.string().required('Обезятельно'),\n    email: yup.string().email('Введите коректный Email').required('Обезятельно')\n  });\n\n  const onSave = values => {\n    console.log('This data save'); // dispatch(fetchUser(values));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username,\n        last_name: lastName,\n        password: 'fsafafa',\n        email\n      },\n      validateOnBlur: true,\n      validationSchema: validationSchema,\n      onSubmit: values => onSave(values),\n      children: ({\n        values,\n        errors,\n        touched,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isValid,\n        dirty\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0418\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"username\",\n          type: \"text\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), touched.username && errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"last_name\",\n          type: \"text\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.last_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), touched.last_name && errors.last_name && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.last_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          type: \"password\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), touched.password && errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          type: \"email\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), touched.email && errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !isValid && !dirty,\n          onClick: onSave,\n          type: \"submit\",\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Edit, \"+BZ0wYE3ae2NhPrCk6zc0oosnvM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["/home/ariet/project/pizza_shop/src/pages/Edit.js"],"names":["React","yup","Formik","useDispatch","useSelector","Edit","dispatch","username","lastName","email","registration","currentUser","validationSchema","object","shape","string","required","last_name","password","onSave","values","console","log","errors","touched","handleBlur","handleChange","handleSubmit","isValid","dirty"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import { fetchUser } from '../redux/actions/registration';\n\nfunction Edit() {\n  const dispatch = useDispatch();\n  const { username, lastName, email } = useSelector(({ registration }) => registration.currentUser);\n\n  const validationSchema = yup.object().shape({\n    username: yup.string().required('Обезятельно'),\n    last_name: yup.string().required('Обезятельно'),\n    password: yup.string().required('Обезятельно'),\n    email: yup.string().email('Введите коректный Email').required('Обезятельно'),\n  });\n\n  const onSave = (values) => {\n    console.log('This data save');\n    // dispatch(fetchUser(values));\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          username,\n          last_name: lastName,\n          password: 'fsafafa',\n          email,\n        }}\n        validateOnBlur\n        validationSchema={validationSchema}\n        onSubmit={(values) => onSave(values)}>\n        {({ values, errors, touched, handleBlur, handleChange, handleSubmit, isValid, dirty }) => (\n          <div className=\"form\">\n            <p>Имя</p>\n            <input\n              name=\"username\"\n              type=\"text\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.username}\n            />{' '}\n            <br />\n            {touched.username && errors.username && <p className=\"error\">{errors.username}</p>}\n            <br />\n            <p>Фамилия </p>\n            <input\n              name=\"last_name\"\n              type=\"text\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.last_name}\n            />{' '}\n            <br />\n            {touched.last_name && errors.last_name && <p className=\"error\">{errors.last_name}</p>}\n            <p>Пароль </p>\n            <input\n              name=\"password\"\n              type=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n            />\n            {touched.password && errors.password && <p className=\"error\">{errors.password}</p>}\n            <p>Email</p>\n            <input\n              name=\"email\"\n              type=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n            />\n            <br />\n            {touched.email && errors.email && <p className=\"error\">{errors.email}</p>}\n            <button disabled={!isValid && !dirty} onClick={onSave} type=\"submit\">\n              Сохранить\n            </button>\n          </div>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}