{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ariet/project/pizza_shop/src/components/LoginPopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport personalAreaImg from '../assets/img/personal.png';\nimport { logoutUser } from '../redux/actions/logout';\nimport { fetchLoginUser } from '../redux/actions/login';\n\nfunction LoginPopup() {\n  _s();\n\n  const currentUser = useSelector(({\n    registration\n  }) => registration.currentUser);\n  const [visiblePopup, setVisiblePopup] = React.useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const validationSchema = yup.object().shape({\n    username: yup.string().required('Обезятельно'),\n    password: yup.string().required('Обезятельно')\n  });\n  const user = !!Object.keys(currentUser).length;\n\n  const onHandleSumbit = values => {\n    dispatch(fetchLoginUser(values));\n    history.push('/account');\n  };\n\n  const logoutButton = () => {\n    localStorage.removeItem('token');\n    dispatch(logoutUser());\n    history.push('/');\n  };\n\n  const loginRef = React.useRef();\n\n  const toggleVisiblePopup = () => {\n    setVisiblePopup(!visiblePopup);\n  };\n\n  const handleOutsideClick = event => {\n    if (!event.path.includes(loginRef.current)) {\n      setVisiblePopup(false);\n    }\n  };\n\n  React.useEffect(() => {\n    document.body.addEventListener('click', handleOutsideClick);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"personal\",\n    ref: loginRef,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: toggleVisiblePopup,\n      width: \"50px\",\n      alt: \"img-login\",\n      src: personalAreaImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), visiblePopup ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: !user ? /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username: '',\n          password: ''\n        },\n        validateOnBlur: true,\n        validationSchema: validationSchema,\n        onSubmit: values => onHandleSumbit(values),\n        children: ({\n          values,\n          errors,\n          touched,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isValid,\n          dirty\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup__list\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"username\",\n            type: \"text\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this), touched.username && errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"password\",\n            type: \"password\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }, this), touched.password && errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !isValid && !dirty,\n            onClick: handleSubmit,\n            type: \"submit\",\n            children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0412\\u043F\\u0435\\u0440\\u0432\\u044B\\u0435 \\u0443 \\u043D\\u0430\\u0441? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"registration\",\n              children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup__list\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/account\",\n            children: \"\\u041B\\u0438\\u0447\\u043D\\u044B\\u0439 \\u043A\\u0430\\u0431\\u0438\\u043D\\u0435\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: logoutButton,\n            children: \" \\u0412\\u044B\\u0439\\u0442\\u0438 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPopup, \"xeD11jk/tbw2sdabdTCoXrr0UuE=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = LoginPopup;\nexport default LoginPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPopup\");","map":{"version":3,"sources":["/home/ariet/project/pizza_shop/src/components/LoginPopup.js"],"names":["React","yup","Formik","Link","useDispatch","useSelector","useHistory","personalAreaImg","logoutUser","fetchLoginUser","LoginPopup","currentUser","registration","visiblePopup","setVisiblePopup","useState","dispatch","history","validationSchema","object","shape","username","string","required","password","user","Object","keys","length","onHandleSumbit","values","push","logoutButton","localStorage","removeItem","loginRef","useRef","toggleVisiblePopup","handleOutsideClick","event","path","includes","current","useEffect","document","body","addEventListener","errors","touched","handleBlur","handleChange","handleSubmit","isValid","dirty"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,eAAP,MAA4B,4BAA5B;AAEA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,cAAT,QAA+B,wBAA/B;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAMC,WAAW,GAAGN,WAAW,CAAC,CAAC;AAAEO,IAAAA;AAAF,GAAD,KAAsBA,YAAY,CAACD,WAApC,CAA/B;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCd,KAAK,CAACe,QAAN,CAAe,KAAf,CAAxC;AAEA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,OAAO,GAAGX,UAAU,EAA1B;AAEA,QAAMY,gBAAgB,GAAGjB,GAAG,CAACkB,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,IAAAA,QAAQ,EAAEpB,GAAG,CAACqB,MAAJ,GAAaC,QAAb,CAAsB,aAAtB,CADgC;AAE1CC,IAAAA,QAAQ,EAAEvB,GAAG,CAACqB,MAAJ,GAAaC,QAAb,CAAsB,aAAtB;AAFgC,GAAnB,CAAzB;AAKA,QAAME,IAAI,GAAG,CAAC,CAACC,MAAM,CAACC,IAAP,CAAYhB,WAAZ,EAAyBiB,MAAxC;;AAEA,QAAMC,cAAc,GAAIC,MAAD,IAAY;AACjCd,IAAAA,QAAQ,CAACP,cAAc,CAACqB,MAAD,CAAf,CAAR;AACAb,IAAAA,OAAO,CAACc,IAAR,CAAa,UAAb;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACzBC,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAlB,IAAAA,QAAQ,CAACR,UAAU,EAAX,CAAR;AACAS,IAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACD,GAJD;;AAMA,QAAMI,QAAQ,GAAGnC,KAAK,CAACoC,MAAN,EAAjB;;AAEA,QAAMC,kBAAkB,GAAG,MAAM;AAC/BvB,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,GAFD;;AAIA,QAAMyB,kBAAkB,GAAIC,KAAD,IAAW;AACpC,QAAI,CAACA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBN,QAAQ,CAACO,OAA7B,CAAL,EAA4C;AAC1C5B,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,GAJD;;AAMAd,EAAAA,KAAK,CAAC2C,SAAN,CAAgB,MAAM;AACpBC,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwCR,kBAAxC;AACD,GAFD,EAEG,EAFH;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAEH,QAA/B;AAAA,4BACE;AAAK,MAAA,OAAO,EAAEE,kBAAd;AAAkC,MAAA,KAAK,EAAC,MAAxC;AAA+C,MAAA,GAAG,EAAC,WAAnD;AAA+D,MAAA,GAAG,EAAE9B;AAApE;AAAA;AAAA;AAAA;AAAA,YADF,EAEGM,YAAY,gBACX;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACG,CAACY,IAAD,gBACC,QAAC,MAAD;AACE,QAAA,aAAa,EAAE;AACbJ,UAAAA,QAAQ,EAAE,EADG;AAEbG,UAAAA,QAAQ,EAAE;AAFG,SADjB;AAKE,QAAA,cAAc,MALhB;AAME,QAAA,gBAAgB,EAAEN,gBANpB;AAOE,QAAA,QAAQ,EAAGY,MAAD,IAAYD,cAAc,CAACC,MAAD,CAPtC;AAAA,kBAQG,CAAC;AACAA,UAAAA,MADA;AAEAiB,UAAAA,MAFA;AAGAC,UAAAA,OAHA;AAIAC,UAAAA,UAJA;AAKAC,UAAAA,YALA;AAMAC,UAAAA,YANA;AAOAC,UAAAA,OAPA;AAQAC,UAAAA;AARA,SAAD,kBAUC;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,QAAQ,EAAEH,YAHZ;AAIE,YAAA,MAAM,EAAED,UAJV;AAKE,YAAA,KAAK,EAAEnB,MAAM,CAACT;AALhB;AAAA;AAAA;AAAA;AAAA,kBAFF,eASE;AAAA;AAAA;AAAA;AAAA,kBATF,EAUG2B,OAAO,CAAC3B,QAAR,IAAoB0B,MAAM,CAAC1B,QAA3B,iBACC;AAAG,YAAA,SAAS,EAAC,OAAb;AAAA,sBAAsB0B,MAAM,CAAC1B;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,eAeE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,QAAQ,EAAE6B,YAHZ;AAIE,YAAA,MAAM,EAAED,UAJV;AAKE,YAAA,KAAK,EAAEnB,MAAM,CAACN;AALhB;AAAA;AAAA;AAAA;AAAA,kBAfF,EAsBGwB,OAAO,CAACxB,QAAR,IAAoBuB,MAAM,CAACvB,QAA3B,iBACC;AAAG,YAAA,SAAS,EAAC,OAAb;AAAA,sBAAsBuB,MAAM,CAACvB;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAvBJ,eA0BE;AAAQ,YAAA,QAAQ,EAAE,CAAC4B,OAAD,IAAY,CAACC,KAA/B;AAAsC,YAAA,OAAO,EAAEF,YAA/C;AAA6D,YAAA,IAAI,EAAC,QAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1BF,eA6BE;AAAA,8GACiB,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBJ;AAAA;AAAA;AAAA;AAAA,cADD,gBAuDC;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,OAAO,EAAEnB,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAxDJ;AAAA;AAAA;AAAA;AAAA,YADW,GAkEX,EApEJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyED;;GAlHQtB,U;UACaL,W,EAGHD,W,EACDE,U;;;KALTI,U;AAoHT,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { Link } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport personalAreaImg from '../assets/img/personal.png';\n\nimport { logoutUser } from '../redux/actions/logout';\nimport { fetchLoginUser } from '../redux/actions/login';\n\nfunction LoginPopup() {\n  const currentUser = useSelector(({ registration }) => registration.currentUser);\n  const [visiblePopup, setVisiblePopup] = React.useState(false);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const validationSchema = yup.object().shape({\n    username: yup.string().required('Обезятельно'),\n    password: yup.string().required('Обезятельно'),\n  });\n\n  const user = !!Object.keys(currentUser).length;\n\n  const onHandleSumbit = (values) => {\n    dispatch(fetchLoginUser(values));\n    history.push('/account');\n  };\n\n  const logoutButton = () => {\n    localStorage.removeItem('token');\n    dispatch(logoutUser());\n    history.push('/');\n  };\n\n  const loginRef = React.useRef();\n\n  const toggleVisiblePopup = () => {\n    setVisiblePopup(!visiblePopup);\n  };\n\n  const handleOutsideClick = (event) => {\n    if (!event.path.includes(loginRef.current)) {\n      setVisiblePopup(false);\n    }\n  };\n\n  React.useEffect(() => {\n    document.body.addEventListener('click', handleOutsideClick);\n  }, []);\n\n  return (\n    <div className=\"personal\" ref={loginRef}>\n      <img onClick={toggleVisiblePopup} width=\"50px\" alt=\"img-login\" src={personalAreaImg} />\n      {visiblePopup ? (\n        <div className=\"popup\">\n          {!user ? (\n            <Formik\n              initialValues={{\n                username: '',\n                password: '',\n              }}\n              validateOnBlur\n              validationSchema={validationSchema}\n              onSubmit={(values) => onHandleSumbit(values)}>\n              {({\n                values,\n                errors,\n                touched,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isValid,\n                dirty,\n              }) => (\n                <div className=\"popup__list\">\n                  <p>Username</p>\n                  <input\n                    name=\"username\"\n                    type=\"text\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.username}\n                  />\n                  <br />\n                  {touched.username && errors.username && (\n                    <p className=\"error\">{errors.username}</p>\n                  )}\n\n                  <p>Пароль </p>\n                  <input\n                    name=\"password\"\n                    type=\"password\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.password}\n                  />\n                  {touched.password && errors.password && (\n                    <p className=\"error\">{errors.password}</p>\n                  )}\n\n                  <button disabled={!isValid && !dirty} onClick={handleSubmit} type=\"submit\">\n                    Войти\n                  </button>\n                  <p>\n                    Впервые у нас? <Link to=\"registration\">Зарегистрироваться</Link>\n                  </p>\n                </div>\n              )}\n            </Formik>\n          ) : (\n            <div className=\"popup\">\n              <div className=\"popup__list\">\n                <Link to=\"/account\">Личный кабинет</Link>\n                <button onClick={logoutButton}> Выйти </button>\n              </div>\n            </div>\n          )}\n        </div>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n}\n\nexport default LoginPopup;\n"]},"metadata":{},"sourceType":"module"}