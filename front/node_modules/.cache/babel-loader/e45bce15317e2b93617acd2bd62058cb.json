{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ariet/project/pizza_shop/src/pages/Registration.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { fetchUser } from '../redux/actions/registration';\n\nfunction Registration() {\n  _s();\n\n  const dispatch = useDispatch();\n  const validationSchema = yup.object().shape({\n    name: yup.string().required('Обезятельно'),\n    secondName: yup.string().required('Обезятельно'),\n    password: yup.string().required('Обезятельно'),\n    confirmPassword: yup.string().oneOf([yup.ref('password')], 'Пароли не совпадают').required('Обезятельно'),\n    email: yup.string().email('Введите коректный Email').required('Обезятельно')\n  });\n\n  const onHandleSumbit = values => {\n    // event.preventDefault();\n    console.log(values);\n    dispatch(fetchUser(values));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        // name: '',\n        username: '',\n        secondName: '',\n        password: '',\n        confirmPassword: '',\n        email: ''\n      },\n      validateOnBlur: true,\n      validationSchema: validationSchema,\n      onSubmit: values => onHandleSumbit(values),\n      children: ({\n        values,\n        errors,\n        touched,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isValid,\n        dirty\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0418\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"username\",\n          type: \"text\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), touched.username && errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"secondName\",\n          type: \"text\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.secondName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), touched.secondName && errors.secondName && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.secondName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          type: \"password\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), touched.password && errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"confirmPassword\",\n          type: \"password\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), touched.confirmPassword && errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          type: \"email\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), touched.email && errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !isValid && !dirty,\n          onClick: handleSubmit,\n          type: \"submit\",\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Registration, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/home/ariet/project/pizza_shop/src/pages/Registration.js"],"names":["React","yup","Formik","useDispatch","fetchUser","Registration","dispatch","validationSchema","object","shape","name","string","required","secondName","password","confirmPassword","oneOf","ref","email","onHandleSumbit","values","console","log","username","errors","touched","handleBlur","handleChange","handleSubmit","isValid","dirty"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchUser } from '../redux/actions/registration';\n\nfunction Registration() {\n  const dispatch = useDispatch();\n\n  const validationSchema = yup.object().shape({\n    name: yup.string().required('Обезятельно'),\n    secondName: yup.string().required('Обезятельно'),\n    password: yup.string().required('Обезятельно'),\n    confirmPassword: yup\n      .string()\n      .oneOf([yup.ref('password')], 'Пароли не совпадают')\n      .required('Обезятельно'),\n    email: yup.string().email('Введите коректный Email').required('Обезятельно'),\n  });\n\n  const onHandleSumbit = (values) => {\n    // event.preventDefault();\n    console.log(values);\n    dispatch(fetchUser(values));\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          // name: '',\n          username: '',\n          secondName: '',\n          password: '',\n          confirmPassword: '',\n          email: '',\n        }}\n        validateOnBlur\n        validationSchema={validationSchema}\n        onSubmit={(values) => onHandleSumbit(values)}>\n        {({ values, errors, touched, handleBlur, handleChange, handleSubmit, isValid, dirty }) => (\n          <div className=\"form\">\n            <p>Имя</p>\n            <input\n              name=\"username\"\n              type=\"text\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.username}\n            />{' '}\n            <br />\n            {touched.username && errors.username && <p className=\"error\">{errors.username}</p>}\n            <br />\n            <p>Фамилия </p>\n            <input\n              name=\"secondName\"\n              type=\"text\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.secondName}\n            />{' '}\n            <br />\n            {touched.secondName && errors.secondName && (\n              <p className=\"error\">{errors.secondName}</p>\n            )}\n            <p>Пароль </p>\n            <input\n              name=\"password\"\n              type=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n            />\n            {touched.password && errors.password && <p className=\"error\">{errors.password}</p>}\n            <p>Повторите пароль</p>\n            <input\n              name=\"confirmPassword\"\n              type=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.confirmPassword}\n            />\n            <br />\n            {touched.confirmPassword && errors.confirmPassword && (\n              <p className=\"error\">{errors.confirmPassword}</p>\n            )}\n            <p>Email</p>\n            <input\n              name=\"email\"\n              type=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n            />\n            <br />\n            {touched.email && errors.email && <p className=\"error\">{errors.email}</p>}\n            <button disabled={!isValid && !dirty} onClick={handleSubmit} type=\"submit\">\n              Отправить\n            </button>\n          </div>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default Registration;\n"]},"metadata":{},"sourceType":"module"}