{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ariet/project/pizza_shop/src/pages/SingUp.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { signUpUser, signUpUserSuccess, signUpUserFailure } from '../redux/actions/user';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { Alert, TabAuth } from '../components';\nexport default function SingUp() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const {\n    isAuth,\n    loading,\n    error\n  } = useSelector(({\n    userReducer\n  }) => userReducer);\n  const [clicked, setClicked] = React.useState(false);\n  const history = useHistory();\n\n  if (isAuth) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  const onSubmit = values => {\n    dispatch(signUpUser(values)).then(({\n      data\n    }) => {\n      localStorage.setItem('token', JSON.stringify(data.auth_token));\n      dispatch(signUpUserSuccess(data));\n      history.push('./account');\n    }).then(() => {\n      setClicked(true);\n    }).catch(err => {\n      // console.log(err.response);\n      // console.log(err.request);\n      // console.log(JSON.parse(err.request.response));\n      if (err.request) {\n        dispatch(signUpUserFailure(JSON.parse(err.request.response)));\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(TabAuth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inp\",\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"\\u0418\\u043C\\u044F\",\n          ref: register({\n            required: 'Username is required.'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: [\" \", errors.username.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inp\",\n          type: \"text\",\n          name: \"last_name\",\n          placeholder: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n          ref: register({\n            required: 'Last name is required'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), errors.last_name && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: [\" \", errors.last_name.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inp\",\n          type: \"number\",\n          name: \"phone\",\n          placeholder: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\",\n          ref: register({\n            required: 'Phone is required',\n            pattern: ''\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: [\" \", errors.phone.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inp\",\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          ref: register({\n            required: 'Email is required',\n            pattern: {\n              value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n              message: 'Email is not valid.'\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: [\" \", errors.email.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inp\",\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          ref: register({\n            required: 'Password is required',\n            minLength: {\n              value: 8,\n              message: 'Password should be at-least 6 characters.'\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: [\" \", errors.password.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), clicked ? /*#__PURE__*/_jsxDEV(Alert, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 20\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: loading,\n          className: \"form__btn btn\",\n          type: \"submit\",\n          children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingUp, \"QoLdFEIcnMjPMpHIPsxzaRaVreU=\", false, function () {\n  return [useDispatch, useForm, useSelector, useHistory];\n});\n\n_c = SingUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingUp\");","map":{"version":3,"sources":["/home/ariet/project/pizza_shop/src/pages/SingUp.js"],"names":["React","useDispatch","useSelector","useForm","signUpUser","signUpUserSuccess","signUpUserFailure","Redirect","useHistory","Alert","TabAuth","SingUp","dispatch","register","handleSubmit","errors","isAuth","loading","error","userReducer","clicked","setClicked","useState","history","onSubmit","values","then","data","localStorage","setItem","JSON","stringify","auth_token","push","catch","err","request","parse","response","required","username","message","last_name","pattern","phone","value","email","minLength","password"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\n\nimport { signUpUser, signUpUserSuccess, signUpUserFailure } from '../redux/actions/user';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { Alert, TabAuth } from '../components';\n\nexport default function SingUp() {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, errors } = useForm();\n  const { isAuth, loading, error } = useSelector(({ userReducer }) => userReducer);\n  const [clicked, setClicked] = React.useState(false);\n  const history = useHistory();\n\n  if (isAuth) {\n    return <Redirect to=\"/account\" />;\n  }\n  const onSubmit = (values) => {\n    dispatch(signUpUser(values))\n      .then(({ data }) => {\n        localStorage.setItem('token', JSON.stringify(data.auth_token));\n        dispatch(signUpUserSuccess(data));\n        history.push('./account');\n      })\n      .then(() => {\n        setClicked(true);\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        // console.log(err.request);\n        // console.log(JSON.parse(err.request.response));\n        if (err.request) {\n          dispatch(signUpUserFailure(JSON.parse(err.request.response)));\n        }\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <TabAuth />\n\n      <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-control\">\n          <input\n            className=\"inp\"\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Имя\"\n            ref={register({ required: 'Username is required.' })}\n          />\n          {errors.username && <p className=\"error\"> {errors.username.message} </p>}\n        </div>\n        <div className=\"form-control\">\n          <input\n            className=\"inp\"\n            type=\"text\"\n            name=\"last_name\"\n            placeholder=\"Фамилия\"\n            ref={register({ required: 'Last name is required' })}\n          />\n          {errors.last_name && <p className=\"error\"> {errors.last_name.message} </p>}\n        </div>\n        <div className=\"form-control\">\n          <input\n            className=\"inp\"\n            type=\"number\"\n            name=\"phone\"\n            placeholder=\"Телефон\"\n            ref={register({ required: 'Phone is required', pattern: '' })}\n          />\n          {errors.phone && <p className=\"error\"> {errors.phone.message} </p>}\n        </div>\n        <div className=\"form-control\">\n          <input\n            className=\"inp\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            ref={register({\n              required: 'Email is required',\n              pattern: {\n                value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n                message: 'Email is not valid.',\n              },\n            })}\n          />\n          {errors.email && <p className=\"error\"> {errors.email.message} </p>}\n        </div>\n        <div className=\"form-control\">\n          <input\n            className=\"inp\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Пароль\"\n            ref={register({\n              required: 'Password is required',\n              minLength: {\n                value: 8,\n                message: 'Password should be at-least 6 characters.',\n              },\n            })}\n          />\n          {errors.password && <p className=\"error\"> {errors.password.message} </p>}\n        </div>\n        {clicked ? <Alert error={error} /> : ''}\n        <div className=\"form-control\">\n          <button disabled={loading} className=\"form__btn btn\" type=\"submit\">\n            Зарегистрироваться\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}