{"ast":null,"code":"import { array } from 'prop-types';\nconst initialState = {\n  items: {},\n  totalPrice: 0,\n  itemCount: 0\n};\n\nfunction cart(state = initialState, action) {\n  if (action.type === 'SET_TOTALPRICE') {\n    return { ...state,\n      totalPrice: action.payload\n    };\n  }\n\n  if (action.type === 'SET_COUNT') {\n    return { ...state,\n      itemCount: action.payload\n    };\n  }\n\n  switch (action.type) {\n    case 'ADD_PIZZAS':\n      const newItems = { ...state.items,\n        [action.payload.id]: !state.items[action.payload.id] ? [action.payload] : [...state.items[action.payload.id], action.payload]\n      };\n      const totalArr = [].concat.apply([], Object.values(newItems));\n      return { ...state,\n        items: newItems,\n        itemCount: totalArr.length // totalPrice: totalArr,\n\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default cart;\narray.map(item => {});","map":{"version":3,"sources":["/home/ariet/project/pizza_shop/src/redux/reducers/cart.js"],"names":["array","initialState","items","totalPrice","itemCount","cart","state","action","type","payload","newItems","id","totalArr","concat","apply","Object","values","length","map","item"],"mappings":"AAAA,SAASA,KAAT,QAAsB,YAAtB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,UAAU,EAAE,CAFO;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;;AAMA,SAASC,IAAT,CAAcC,KAAK,GAAGL,YAAtB,EAAoCM,MAApC,EAA4C;AAC1C,MAAIA,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAsC;AACpC,WAAO,EACL,GAAGF,KADE;AAELH,MAAAA,UAAU,EAAEI,MAAM,CAACE;AAFd,KAAP;AAID;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO,EACL,GAAGF,KADE;AAELF,MAAAA,SAAS,EAAEG,MAAM,CAACE;AAFb,KAAP;AAID;;AAED,UAAQF,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,YAAME,QAAQ,GAAG,EACf,GAAGJ,KAAK,CAACJ,KADM;AAEf,SAACK,MAAM,CAACE,OAAP,CAAeE,EAAhB,GAAqB,CAACL,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACE,OAAP,CAAeE,EAA3B,CAAD,GACjB,CAACJ,MAAM,CAACE,OAAR,CADiB,GAEjB,CAAC,GAAGH,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACE,OAAP,CAAeE,EAA3B,CAAJ,EAAoCJ,MAAM,CAACE,OAA3C;AAJW,OAAjB;AAOA,YAAMG,QAAQ,GAAG,GAAGC,MAAH,CAAUC,KAAV,CAAgB,EAAhB,EAAoBC,MAAM,CAACC,MAAP,CAAcN,QAAd,CAApB,CAAjB;AACA,aAAO,EACL,GAAGJ,KADE;AAELJ,QAAAA,KAAK,EAAEQ,QAFF;AAGLN,QAAAA,SAAS,EAAEQ,QAAQ,CAACK,MAHf,CAIL;;AAJK,OAAP;;AAMF;AACE,aAAOX,KAAP;AAjBJ;AAmBD;;AAED,eAAeD,IAAf;AAEAL,KAAK,CAACkB,GAAN,CAAWC,IAAD,IAAU,CAAE,CAAtB","sourcesContent":["import { array } from 'prop-types';\n\nconst initialState = {\n  items: {},\n  totalPrice: 0,\n  itemCount: 0,\n};\n\nfunction cart(state = initialState, action) {\n  if (action.type === 'SET_TOTALPRICE') {\n    return {\n      ...state,\n      totalPrice: action.payload,\n    };\n  }\n\n  if (action.type === 'SET_COUNT') {\n    return {\n      ...state,\n      itemCount: action.payload,\n    };\n  }\n\n  switch (action.type) {\n    case 'ADD_PIZZAS':\n      const newItems = {\n        ...state.items,\n        [action.payload.id]: !state.items[action.payload.id]\n          ? [action.payload]\n          : [...state.items[action.payload.id], action.payload],\n      };\n\n      const totalArr = [].concat.apply([], Object.values(newItems));\n      return {\n        ...state,\n        items: newItems,\n        itemCount: totalArr.length,\n        // totalPrice: totalArr,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default cart;\n\narray.map((item) => {});\n"]},"metadata":{},"sourceType":"module"}