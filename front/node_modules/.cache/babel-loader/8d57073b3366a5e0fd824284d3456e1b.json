{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ariet/project/pizza_shop/src/pages/Edit.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux'; // import { Redirect } from 'react-router-dom';\n// import createBrowserHistory from 'history/createBrowserHistory';\n\nimport { fetchUser } from '../redux/actions/registration'; // const history = createBrowserHistory({ forceRefresh: true });\n\nfunction Edit() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    username,\n    lastName,\n    email\n  } = useSelector(({\n    registration\n  }) => registration.currentUser);\n  const validationSchema = yup.object().shape({\n    username: yup.string().required('Обезятельно'),\n    last_name: yup.string().required('Обезятельно'),\n    password: yup.string().required('Обезятельно'),\n    email: yup.string().email('Введите коректный Email').required('Обезятельно')\n  });\n\n  const onHandleSumbit = values => {\n    dispatch(fetchUser(values));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username,\n        last_name: lastName,\n        password: 'fsafafa',\n        email\n      },\n      validateOnBlur: true,\n      validationSchema: validationSchema,\n      onSubmit: values => onHandleSumbit(values),\n      children: ({\n        values,\n        errors,\n        touched,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isValid,\n        dirty\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0418\\u043C\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"username\",\n            type: \"text\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), touched.username && errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"last_name\",\n            type: \"text\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.last_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), touched.last_name && errors.last_name && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.last_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"password\",\n            type: \"password\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), touched.password && errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            type: \"email\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), touched.email && errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !isValid && !dirty,\n          onClick: handleSubmit,\n          type: \"submit\",\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Edit, \"+BZ0wYE3ae2NhPrCk6zc0oosnvM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["/home/ariet/project/pizza_shop/src/pages/Edit.js"],"names":["React","yup","Formik","useDispatch","useSelector","fetchUser","Edit","dispatch","username","lastName","email","registration","currentUser","validationSchema","object","shape","string","required","last_name","password","onHandleSumbit","values","errors","touched","handleBlur","handleChange","handleSubmit","isValid","dirty"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Redirect } from 'react-router-dom';\n// import createBrowserHistory from 'history/createBrowserHistory';\n\nimport { fetchUser } from '../redux/actions/registration';\n\n// const history = createBrowserHistory({ forceRefresh: true });\n\nfunction Edit() {\n  const dispatch = useDispatch();\n  const { username, lastName, email } = useSelector(({ registration }) => registration.currentUser);\n\n  const validationSchema = yup.object().shape({\n    username: yup.string().required('Обезятельно'),\n    last_name: yup.string().required('Обезятельно'),\n    password: yup.string().required('Обезятельно'),\n    email: yup.string().email('Введите коректный Email').required('Обезятельно'),\n  });\n\n  const onHandleSumbit = (values) => {\n    dispatch(fetchUser(values));\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          username,\n          last_name: lastName,\n          password: 'fsafafa',\n          email,\n        }}\n        validateOnBlur\n        validationSchema={validationSchema}\n        onSubmit={(values) => onHandleSumbit(values)}>\n        {({ values, errors, touched, handleBlur, handleChange, handleSubmit, isValid, dirty }) => (\n          <div className=\"form\">\n            <div>\n              <p>Имя</p>\n              <input\n                name=\"username\"\n                type=\"text\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.username}\n              />{' '}\n              <br />\n              {touched.username && errors.username && <p className=\"error\">{errors.username}</p>}\n            </div>\n            <div>\n              <br />\n              <p>Фамилия </p>\n              <input\n                name=\"last_name\"\n                type=\"text\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.last_name}\n              />{' '}\n              <br />\n              {touched.last_name && errors.last_name && <p className=\"error\">{errors.last_name}</p>}\n            </div>\n\n            <div>\n              <p>Пароль </p>\n              <input\n                name=\"password\"\n                type=\"password\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n              />\n              {touched.password && errors.password && <p className=\"error\">{errors.password}</p>}\n            </div>\n            <div>\n              <p>Email</p>\n              <input\n                name=\"email\"\n                type=\"email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n              />\n              <br />\n              {touched.email && errors.email && <p className=\"error\">{errors.email}</p>}\n            </div>\n\n            <button disabled={!isValid && !dirty} onClick={handleSubmit} type=\"submit\">\n              Сохранить\n            </button>\n          </div>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}