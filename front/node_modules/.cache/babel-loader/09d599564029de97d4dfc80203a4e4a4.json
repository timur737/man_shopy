{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ariet/project/pizza_shop/src/components/ChangePass.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { changePassword, changePasswordFailure, changePasswordSuccess } from '../redux/actions/user';\n\nfunction ChangePass({\n  id\n}) {\n  _s();\n\n  const {\n    register,\n    errors,\n    handleSubmit,\n    watch\n  } = useForm();\n  const dispatch = useDispatch();\n  const pass = React.useRef({});\n  pass.current = watch('password', '');\n\n  const onChangePassword = values => {\n    const token = JSON.parse(localStorage.getItem('token'));\n    dispatch(changePassword(values, id, token)).then(({\n      data\n    }) => {\n      dispatch(changePasswordSuccess(data));\n    }).catch(err => {\n      dispatch(changePasswordFailure(err.message));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit(onChangePassword),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        className: \"inp\",\n        name: \"old_password\",\n        type: \"password\",\n        ref: register({\n          required: 'Password is required.',\n          minLength: {\n            value: 8,\n            message: 'Password should be at-least 6 characters.'\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), errors.old_password && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.old_password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        className: \"inp\",\n        name: \"password\",\n        type: \"password\",\n        ref: register({\n          required: 'last_name is required.',\n          minLength: {\n            value: 8,\n            message: 'Password should be at-least 6 characters.'\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inp\",\n        name: \"password2\",\n        type: \"password\",\n        placeholder: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        ref: register({\n          validate: value => value === pass.current || 'Пароли не совподают',\n          required: 'last_name is required.',\n          minLength: {\n            value: 6,\n            message: 'Password should be at-least 6 characters.'\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), errors.password2 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.password2.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChangePass, \"OC/lw8TbAmgiAay/Gtzi0HAfgzY=\", false, function () {\n  return [useForm, useDispatch];\n});\n\n_c = ChangePass;\nexport default ChangePass;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePass\");","map":{"version":3,"sources":["/home/ariet/project/pizza_shop/src/components/ChangePass.js"],"names":["React","useForm","useDispatch","changePassword","changePasswordFailure","changePasswordSuccess","ChangePass","id","register","errors","handleSubmit","watch","dispatch","pass","useRef","current","onChangePassword","values","token","JSON","parse","localStorage","getItem","then","data","catch","err","message","required","minLength","value","old_password","password","validate","password2"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport {\n  changePassword,\n  changePasswordFailure,\n  changePasswordSuccess,\n} from '../redux/actions/user';\n\nfunction ChangePass({ id }) {\n  const { register, errors, handleSubmit, watch } = useForm();\n  const dispatch = useDispatch();\n\n  const pass = React.useRef({});\n  pass.current = watch('password', '');\n\n  const onChangePassword = (values) => {\n    const token = JSON.parse(localStorage.getItem('token'));\n\n    dispatch(changePassword(values, id, token))\n      .then(({ data }) => {\n        dispatch(changePasswordSuccess(data));\n      })\n      .catch((err) => {\n        dispatch(changePasswordFailure(err.message));\n      });\n  };\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit(onChangePassword)}>\n      <div className=\"form-control\">\n        <input\n          placeholder=\"Введите ваш пароль\"\n          className=\"inp\"\n          name=\"old_password\"\n          type=\"password\"\n          ref={register({\n            required: 'Password is required.',\n            minLength: {\n              value: 8,\n              message: 'Password should be at-least 6 characters.',\n            },\n          })}\n        />\n        {errors.old_password && <p className=\"error\">{errors.old_password.message}</p>}\n      </div>\n      <div className=\"form-control\">\n        <input\n          placeholder=\"Введите новый пароль\"\n          className=\"inp\"\n          name=\"password\"\n          type=\"password\"\n          ref={register({\n            required: 'last_name is required.',\n            minLength: {\n              value: 8,\n              message: 'Password should be at-least 6 characters.',\n            },\n          })}\n        />\n        {errors.password && <p className=\"error\">{errors.password.message}</p>}\n      </div>\n      <div className=\"form-control\">\n        <input\n          className=\"inp\"\n          name=\"password2\"\n          type=\"password\"\n          placeholder=\"Повторите пароль\"\n          ref={register({\n            validate: (value) => value === pass.current || 'Пароли не совподают',\n            required: 'last_name is required.',\n            minLength: {\n              value: 6,\n              message: 'Password should be at-least 6 characters.',\n            },\n          })}\n        />\n        {errors.password2 && <p className=\"error\">{errors.password2.message}</p>}\n      </div>\n      <button type=\"submit\">Сохранить</button>\n    </form>\n  );\n}\n\nexport default ChangePass;\n"]},"metadata":{},"sourceType":"module"}