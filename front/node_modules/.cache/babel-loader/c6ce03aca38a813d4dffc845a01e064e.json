{"ast":null,"code":"import axios from 'axios';\nconst url = 'https://f9e2fa0fa8b0.ngrok.io';\nexport const signUpUser = user => dispatch => {\n  dispatch(signUpUserStarted());\n  return axios.post(`${url}/auth/users/`, user);\n};\n\nconst signUpUserStarted = () => ({\n  type: 'SIGNUP_USER'\n});\n\nexport const signUpUserSuccess = user => ({\n  type: 'SIGNUP_USER_SUCCESS',\n  payload: user\n});\nexport const signUpUserFailure = error => ({\n  type: 'SIGNUP_USER_FAILURE',\n  payload: error\n});\nexport const meFromToken = tokenFromStorage => dispatch => {\n  dispatch(meFromTokenStarted());\n  return axios.get(`${url}/auth/users/me/`, {\n    headers: {\n      Authorization: `Token ${tokenFromStorage}`\n    }\n  });\n};\n\nconst meFromTokenStarted = () => ({\n  type: 'ME_FROM_TOKEN'\n});\n\nexport const meFromTokenSuccess = user => ({\n  type: 'ME_FROM_TOKEN_SUCCESS',\n  payload: user\n});\nexport const meFromTokenFailure = error => ({\n  type: 'ME_FROM_TOKEN_FAILURE',\n  payload: error\n});\nexport const loginUser = user => dispatch => {\n  dispatch(loginUserStarted());\n  return axios.post(`${url}/login/`, user);\n};\n\nconst loginUserStarted = () => ({\n  type: 'LOGIN_USER'\n});\n\nexport const loginUserSuccess = user => ({\n  type: 'LOGIN_USER_SUCCESS',\n  payload: user\n});\nexport const loginUserFailure = error => ({\n  type: 'LOGIN_USER_FAILURE',\n  payload: error\n});\nexport const editUser = (user, id, token) => dispatch => {\n  dispatch(editUserStarted());\n  return axios.put(`${url}/update-profile/${id}/`, {\n    first_name: user.first_name,\n    last_name: user.last_name,\n    phone: user.phone,\n    email: user.email\n  }, {\n    headers: {\n      Authorization: `Token ${token}`\n    }\n  });\n};\n\nconst editUserStarted = () => ({\n  type: 'EDIT_USER'\n});\n\nexport const editUserSuccess = user => ({\n  type: 'EDIT_USER_SUCCESS',\n  payload: user\n});\nexport const editUserFailure = error => ({\n  type: 'EDIT_USER_FAILURE',\n  payload: error\n});\nexport const changePassword = (user, id, token) => dispatch => {\n  dispatch(changePasswordStarted());\n  return axios.put(`${url}/change-password/${id}/`, {\n    old_password: user.old_password,\n    password: user.password,\n    password2: user.password2\n  }, {\n    headers: {\n      Authorization: `Token ${token}`\n    }\n  });\n};\n\nconst changePasswordStarted = data => ({\n  type: 'CHANGE_PASS'\n});\n\nexport const changePasswordSuccess = () => ({\n  type: 'CHANGE_PASS_SUCCESS'\n});\nexport const changePasswordFailure = error => ({\n  type: 'CHANGE_PASS_FAILURE',\n  payload: error\n});\nexport const logoutUser = () => ({\n  type: 'LOGOUT_USER'\n});","map":{"version":3,"sources":["/home/ariet/project/shop/src/redux/actions/user.js"],"names":["axios","url","signUpUser","user","dispatch","signUpUserStarted","post","type","signUpUserSuccess","payload","signUpUserFailure","error","meFromToken","tokenFromStorage","meFromTokenStarted","get","headers","Authorization","meFromTokenSuccess","meFromTokenFailure","loginUser","loginUserStarted","loginUserSuccess","loginUserFailure","editUser","id","token","editUserStarted","put","first_name","last_name","phone","email","editUserSuccess","editUserFailure","changePassword","changePasswordStarted","old_password","password","password2","data","changePasswordSuccess","changePasswordFailure","logoutUser"],"mappings":"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","sourcesContent":["import axios from 'axios';\nconst url = 'https://f9e2fa0fa8b0.ngrok.io';\n\nexport const signUpUser = (user) => (dispatch) => {\n  dispatch(signUpUserStarted());\n\n  return axios.post(`${url}/auth/users/`, user);\n};\n\nconst signUpUserStarted = () => ({\n  type: 'SIGNUP_USER',\n});\n\nexport const signUpUserSuccess = (user) => ({\n  type: 'SIGNUP_USER_SUCCESS',\n  payload: user,\n});\n\nexport const signUpUserFailure = (error) => ({\n  type: 'SIGNUP_USER_FAILURE',\n  payload: error,\n});\n\nexport const meFromToken = (tokenFromStorage) => (dispatch) => {\n  dispatch(meFromTokenStarted());\n\n  return axios.get(`${url}/auth/users/me/`, {\n    headers: { Authorization: `Token ${tokenFromStorage}` },\n  });\n};\n\nconst meFromTokenStarted = () => ({\n  type: 'ME_FROM_TOKEN',\n});\n\nexport const meFromTokenSuccess = (user) => ({\n  type: 'ME_FROM_TOKEN_SUCCESS',\n  payload: user,\n});\n\nexport const meFromTokenFailure = (error) => ({\n  type: 'ME_FROM_TOKEN_FAILURE',\n  payload: error,\n});\n\nexport const loginUser = (user) => (dispatch) => {\n  dispatch(loginUserStarted());\n  return axios.post(`${url}/login/`, user);\n};\n\nconst loginUserStarted = () => ({\n  type: 'LOGIN_USER',\n});\n\nexport const loginUserSuccess = (user) => ({\n  type: 'LOGIN_USER_SUCCESS',\n  payload: user,\n});\n\nexport const loginUserFailure = (error) => ({\n  type: 'LOGIN_USER_FAILURE',\n  payload: error,\n});\n\nexport const editUser = (user, id, token) => (dispatch) => {\n  dispatch(editUserStarted());\n  return axios.put(\n    `${url}/update-profile/${id}/`,\n    {\n      first_name: user.first_name,\n      last_name: user.last_name,\n      phone: user.phone,\n      email: user.email,\n    },\n    {\n      headers: { Authorization: `Token ${token}` },\n    },\n  );\n};\n\nconst editUserStarted = () => ({\n  type: 'EDIT_USER',\n});\n\nexport const editUserSuccess = (user) => ({\n  type: 'EDIT_USER_SUCCESS',\n  payload: user,\n});\n\nexport const editUserFailure = (error) => ({\n  type: 'EDIT_USER_FAILURE',\n  payload: error,\n});\n\nexport const changePassword = (user, id, token) => (dispatch) => {\n  dispatch(changePasswordStarted());\n\n  return axios.put(\n    `${url}/change-password/${id}/`,\n    {\n      old_password: user.old_password,\n      password: user.password,\n      password2: user.password2,\n    },\n    {\n      headers: { Authorization: `Token ${token}` },\n    },\n  );\n};\n\nconst changePasswordStarted = (data) => ({\n  type: 'CHANGE_PASS',\n});\n\nexport const changePasswordSuccess = () => ({\n  type: 'CHANGE_PASS_SUCCESS',\n});\n\nexport const changePasswordFailure = (error) => ({\n  type: 'CHANGE_PASS_FAILURE',\n  payload: error,\n});\n\nexport const logoutUser = () => ({\n  type: 'LOGOUT_USER',\n});\n"]},"metadata":{},"sourceType":"module"}