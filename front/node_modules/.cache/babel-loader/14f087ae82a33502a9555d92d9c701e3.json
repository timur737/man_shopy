{"ast":null,"code":"const initialState = {\n  items: {},\n  totalPrice: 0,\n  itemCount: 0\n}; // function getTotalPrice(arr) {\n//   arr.reduce((sum, obj) => obj.price + sum, 0);\n// }\n\nfunction cart(state = initialState, action) {\n  switch (action.type) {\n    case 'ADD_PIZZAS':\n      const currentPizzaItems = !state.items[action.payload.id] ? [action.payload] : [...state.items[action.payload.id].items, action.payload];\n      const newItems = { ...state.items,\n        [action.payload.id]: {\n          items: currentPizzaItems,\n          totalPrice: currentPizzaItems.reduce((sum, obj) => obj.price + sum, 0),\n          totalCount: currentPizzaItems.length\n        }\n      };\n      const totalArr = [].concat.apply([], Object.values(newItems).map(obj => obj.items));\n      return { ...state,\n        items: newItems,\n        itemCount: totalArr.length,\n        totalPrice: totalArr.reduce((sum, obj) => obj.price + sum, 0)\n      };\n\n    case 'CLEAR_CART':\n      return {\n        items: {},\n        itemCount: 0,\n        totalPrice: 0\n      };\n\n    case 'REMOVE_CART_ITEM':\n      const newObj = { ...state.items\n      };\n      const currentTotalPrice = newObj[action.payload].totalPrice;\n      const currentTotalCount = newObj[action.payload].totalCount;\n      delete newObj[action.payload];\n      return { ...state,\n        items: newObj,\n        totalPrice: state.totalPrice - currentTotalPrice,\n        itemCount: state.itemCount - currentTotalCount\n      };\n\n    case 'INCREMENT':\n      const nItems = [...state.items[action.payload].items, state.items[action.payload][0]];\n      console.log(nItems);\n      return { ...state,\n        items: {\n          [action.payload]: {\n            items: nItems,\n            totalPrice: nItems.reduce((sum, obj) => obj.price + sum, 0)\n          }\n        }\n      };\n\n    case 'DECREMENT':\n      return { ...state,\n        items: state.items[action.payload].totalCount - 1\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default cart;","map":{"version":3,"sources":["/home/ariet/project/pizza_shop/src/redux/reducers/cart.js"],"names":["initialState","items","totalPrice","itemCount","cart","state","action","type","currentPizzaItems","payload","id","newItems","reduce","sum","obj","price","totalCount","length","totalArr","concat","apply","Object","values","map","newObj","currentTotalPrice","currentTotalCount","nItems","console","log"],"mappings":"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","sourcesContent":["const initialState = {\n  items: {},\n  totalPrice: 0,\n  itemCount: 0,\n};\n\n// function getTotalPrice(arr) {\n//   arr.reduce((sum, obj) => obj.price + sum, 0);\n// }\n\nfunction cart(state = initialState, action) {\n  switch (action.type) {\n    case 'ADD_PIZZAS':\n      const currentPizzaItems = !state.items[action.payload.id]\n        ? [action.payload]\n        : [...state.items[action.payload.id].items, action.payload];\n\n      const newItems = {\n        ...state.items,\n        [action.payload.id]: {\n          items: currentPizzaItems,\n          totalPrice: currentPizzaItems.reduce((sum, obj) => obj.price + sum, 0),\n          totalCount: currentPizzaItems.length,\n        },\n      };\n      const totalArr = [].concat.apply(\n        [],\n        Object.values(newItems).map((obj) => obj.items),\n      );\n\n      return {\n        ...state,\n        items: newItems,\n        itemCount: totalArr.length,\n        totalPrice: totalArr.reduce((sum, obj) => obj.price + sum, 0),\n      };\n\n    case 'CLEAR_CART':\n      return {\n        items: {},\n        itemCount: 0,\n        totalPrice: 0,\n      };\n\n    case 'REMOVE_CART_ITEM':\n      const newObj = {\n        ...state.items,\n      };\n\n      const currentTotalPrice = newObj[action.payload].totalPrice;\n      const currentTotalCount = newObj[action.payload].totalCount;\n\n      delete newObj[action.payload];\n\n      return {\n        ...state,\n        items: newObj,\n        totalPrice: state.totalPrice - currentTotalPrice,\n        itemCount: state.itemCount - currentTotalCount,\n      };\n    case 'INCREMENT':\n      const nItems = [...state.items[action.payload].items, state.items[action.payload][0]];\n\n      console.log(nItems);\n      return {\n        ...state,\n        items: {\n          [action.payload]: {\n            items: nItems,\n            totalPrice: nItems.reduce((sum, obj) => obj.price + sum, 0),\n          },\n        },\n      };\n\n    case 'DECREMENT':\n      return {\n        ...state,\n        items: state.items[action.payload].totalCount - 1,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default cart;\n"]},"metadata":{},"sourceType":"module"}