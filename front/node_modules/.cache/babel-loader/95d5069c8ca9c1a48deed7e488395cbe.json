{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ariet/project/pizza_shop/src/pages/SingUp.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport classNames from 'classnames';\nimport { signUpUser, signUpUserSuccess, signUpUserFailure } from '../redux/actions/user';\nimport { useHistory } from 'react-router-dom';\nimport { TabAuth } from '../components';\nexport default function SingUp() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // const { error, isAuth, loading } = useSelector(({ userReducer }) => userReducer);\n\n  const history = useHistory();\n\n  const onSubmit = values => {\n    console.log(values); // dispatch(signUpUser(values))\n    //   .then(({ data }) => {\n    //     localStorage.setItem('token', JSON.stringify(data.auth_token));\n    //     dispatch(signUpUserSuccess(data));\n    //     history.push('./account');\n    //   })\n    //   .catch((error) => {\n    //     dispatch(signUpUserFailure(error.message));\n    //   });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(TabAuth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classNames('inp', {\n            error: errors.username\n          }),\n          type: \"text\",\n          name: \"username\",\n          placeholder: errors.username ? errors.username.message : 'Имя',\n          ref: register({\n            required: 'Username is required.'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inp\",\n          type: \"text\",\n          name: \"last_name\",\n          placeholder: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n          ref: register({\n            required: 'Last name is required'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), errors.last_name && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", errors.last_name.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inp\",\n          type: \"number\",\n          name: \"phone\",\n          placeholder: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\",\n          ref: register({\n            required: 'Phone is required',\n            pattern: ''\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", errors.phone.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inp\",\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          ref: register({\n            required: 'Email is required',\n            pattern: {\n              value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n              message: 'Email is not valid.'\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", errors.email.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inp\",\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          ref: register({\n            required: 'Password is required',\n            minLength: {\n              value: 8,\n              message: 'Password should be at-least 6 characters.'\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", errors.password.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form__btn btn\",\n          type: \"submit\",\n          children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingUp, \"xP9U+Rm3unkGScCsAyigWMgRuDo=\", false, function () {\n  return [useDispatch, useForm, useHistory];\n});\n\n_c = SingUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingUp\");","map":{"version":3,"sources":["/home/ariet/project/pizza_shop/src/pages/SingUp.js"],"names":["React","useDispatch","useSelector","useForm","classNames","signUpUser","signUpUserSuccess","signUpUserFailure","useHistory","TabAuth","SingUp","dispatch","register","handleSubmit","errors","history","onSubmit","values","console","log","error","username","message","required","last_name","pattern","phone","value","email","minLength","password"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport classNames from 'classnames';\n\nimport { signUpUser, signUpUserSuccess, signUpUserFailure } from '../redux/actions/user';\nimport { useHistory } from 'react-router-dom';\nimport { TabAuth } from '../components';\n\nexport default function SingUp() {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, errors } = useForm();\n  // const { error, isAuth, loading } = useSelector(({ userReducer }) => userReducer);\n\n  const history = useHistory();\n\n  const onSubmit = (values) => {\n    console.log(values);\n    // dispatch(signUpUser(values))\n    //   .then(({ data }) => {\n    //     localStorage.setItem('token', JSON.stringify(data.auth_token));\n    //     dispatch(signUpUserSuccess(data));\n    //     history.push('./account');\n    //   })\n    //   .catch((error) => {\n    //     dispatch(signUpUserFailure(error.message));\n    //   });\n  };\n\n  return (\n    <div className=\"container\">\n      <TabAuth />\n\n      <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-control\">\n          <input\n            className={classNames('inp', { error: errors.username })}\n            type=\"text\"\n            name=\"username\"\n            placeholder={errors.username ? errors.username.message : 'Имя'}\n            ref={register({ required: 'Username is required.' })}\n          />\n          {/* {errors.username && <p> {errors.username.message} </p>} */}\n        </div>\n        <div className=\"form-control\">\n          <input\n            className=\"inp\"\n            type=\"text\"\n            name=\"last_name\"\n            placeholder=\"Фамилия\"\n            ref={register({ required: 'Last name is required' })}\n          />\n          {errors.last_name && <span> {errors.last_name.message} </span>}\n        </div>\n        <div className=\"form-control\">\n          <input\n            className=\"inp\"\n            type=\"number\"\n            name=\"phone\"\n            placeholder=\"Телефон\"\n            ref={register({ required: 'Phone is required', pattern: '' })}\n          />\n          {errors.phone && <p> {errors.phone.message} </p>}\n        </div>\n        <div className=\"form-control\">\n          <input\n            className=\"inp\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            ref={register({\n              required: 'Email is required',\n              pattern: {\n                value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n                message: 'Email is not valid.',\n              },\n            })}\n          />\n          {errors.email && <p> {errors.email.message} </p>}\n        </div>\n        <div className=\"form-control\">\n          <input\n            className=\"inp\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Пароль\"\n            ref={register({\n              required: 'Password is required',\n              minLength: {\n                value: 8,\n                message: 'Password should be at-least 6 characters.',\n              },\n            })}\n          />\n          {errors.password && <p> {errors.password.message} </p>}\n        </div>\n        <div className=\"form-control\">\n          <button className=\"form__btn btn\" type=\"submit\">\n            Зарегистрироваться\n          </button>\n        </div>\n      </form>\n      {/* \n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-control\">\n          <label>Username</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            ref={register({ required: 'Username is required.' })}\n          />\n          <div className=\"form-control\">\n            {errors.username && <p className=\"error\"> {errors.username.message} </p>}\n          </div>\n          <label>Фамилия</label>\n          <input\n            type=\"text\"\n            name=\"last_name\"\n            ref={register({ required: 'last_name is required.' })}\n          />\n          {errors.last_name && <p className=\"error\"> {errors.last_name.message} </p>}\n        </div>\n        <div className=\"form-control \">\n          <label>Email</label>\n          <input\n            type=\"text\"\n            name=\"email\"\n            ref={register({\n              required: 'Email is required.',\n              pattern: {\n                value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n                message: 'Email is not valid.',\n              },\n            })}\n          />\n          {errors.email && <p className=\"error\"> {errors.email.message} </p>}\n        </div>\n        <div className=\"form-control\">\n          <label>Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            ref={register({\n              required: 'Password is required.',\n              minLength: {\n                value: 6,\n                message: 'Password should be at-least 6 characters.',\n              },\n            })}\n          />\n          {errors.password && <p className=\"error\"> {errors.password.message} </p>}\n        </div>\n        <div className=\"form-control\">\n          <label></label>\n          <button type=\"submit\">Регистрация</button>\n        </div>\n      </form> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}