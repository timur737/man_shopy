{"ast":null,"code":"const initialState = {\n  items: {},\n  totalPrice: 0,\n  itemCount: 0\n};\n\nfunction cart(state = initialState, action) {\n  function getTotalPrice(arr) {\n    arr.reduce((sum, obj) => obj.price + sum, 0);\n  }\n\n  switch (action.type) {\n    case 'ADD_PIZZAS':\n      const currentPizzaItems = !state.items[action.payload.id] ? [action.payload] : [...state.items[action.payload.id].items, action.payload];\n      const newItems = { ...state.items,\n        [action.payload.id]: {\n          items: currentPizzaItems,\n          totalPrice: currentPizzaItems.reduce((sum, obj) => obj.price + sum, 0),\n          totalCount: currentPizzaItems.length\n        }\n      };\n      const totalArr = [].concat.apply([], Object.values(newItems).map(obj => obj.items));\n      return { ...state,\n        items: newItems,\n        itemCount: totalArr.length,\n        totalPrice: totalArr.reduce((sum, obj) => obj.price + sum, 0)\n      };\n\n    case 'CLEAR_CART':\n      return {\n        items: {},\n        itemCount: 0,\n        totalPrice: 0\n      };\n\n    case 'REMOVE_CART_ITEM':\n      const newObj = { ...state.items\n      };\n      delete newObj[action.payload];\n      return { ...state,\n        items: newObj,\n        totalPrice: state.totalPrice - newObj[action.payload].totalPrice\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default cart; // if (action.type === 'SET_TOTALPRICE') {\n//   return {\n//     ...state,\n//     totalPrice: action.payload,\n//   };\n// }\n// if (action.type === 'SET_COUNT') {\n//   return {\n//     ...state,\n//     itemCount: action.payload,\n//   };\n// }","map":{"version":3,"sources":["/home/ariet/project/pizza_shop/src/redux/reducers/cart.js"],"names":["initialState","items","totalPrice","itemCount","cart","state","action","getTotalPrice","arr","reduce","sum","obj","price","type","currentPizzaItems","payload","id","newItems","totalCount","length","totalArr","concat","apply","Object","values","map","newObj"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,UAAU,EAAE,CAFO;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;;AAMA,SAASC,IAAT,CAAcC,KAAK,GAAGL,YAAtB,EAAoCM,MAApC,EAA4C;AAC1C,WAASC,aAAT,CAAuBC,GAAvB,EAA4B;AAC1BA,IAAAA,GAAG,CAACC,MAAJ,CAAW,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,KAAJ,GAAYF,GAArC,EAA0C,CAA1C;AACD;;AAED,UAAQJ,MAAM,CAACO,IAAf;AACE,SAAK,YAAL;AACE,YAAMC,iBAAiB,GAAG,CAACT,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACS,OAAP,CAAeC,EAA3B,CAAD,GACtB,CAACV,MAAM,CAACS,OAAR,CADsB,GAEtB,CAAC,GAAGV,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACS,OAAP,CAAeC,EAA3B,EAA+Bf,KAAnC,EAA0CK,MAAM,CAACS,OAAjD,CAFJ;AAIA,YAAME,QAAQ,GAAG,EACf,GAAGZ,KAAK,CAACJ,KADM;AAEf,SAACK,MAAM,CAACS,OAAP,CAAeC,EAAhB,GAAqB;AACnBf,UAAAA,KAAK,EAAEa,iBADY;AAEnBZ,UAAAA,UAAU,EAAEY,iBAAiB,CAACL,MAAlB,CAAyB,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,KAAJ,GAAYF,GAAnD,EAAwD,CAAxD,CAFO;AAGnBQ,UAAAA,UAAU,EAAEJ,iBAAiB,CAACK;AAHX;AAFN,OAAjB;AAQA,YAAMC,QAAQ,GAAG,GAAGC,MAAH,CAAUC,KAAV,CACf,EADe,EAEfC,MAAM,CAACC,MAAP,CAAcP,QAAd,EAAwBQ,GAAxB,CAA6Bd,GAAD,IAASA,GAAG,CAACV,KAAzC,CAFe,CAAjB;AAKA,aAAO,EACL,GAAGI,KADE;AAELJ,QAAAA,KAAK,EAAEgB,QAFF;AAGLd,QAAAA,SAAS,EAAEiB,QAAQ,CAACD,MAHf;AAILjB,QAAAA,UAAU,EAAEkB,QAAQ,CAACX,MAAT,CAAgB,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,KAAJ,GAAYF,GAA1C,EAA+C,CAA/C;AAJP,OAAP;;AAOF,SAAK,YAAL;AACE,aAAO;AACLT,QAAAA,KAAK,EAAE,EADF;AAELE,QAAAA,SAAS,EAAE,CAFN;AAGLD,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAMF,SAAK,kBAAL;AACE,YAAMwB,MAAM,GAAG,EACb,GAAGrB,KAAK,CAACJ;AADI,OAAf;AAGA,aAAOyB,MAAM,CAACpB,MAAM,CAACS,OAAR,CAAb;AACA,aAAO,EACL,GAAGV,KADE;AAELJ,QAAAA,KAAK,EAAEyB,MAFF;AAGLxB,QAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,GAAmBwB,MAAM,CAACpB,MAAM,CAACS,OAAR,CAAN,CAAuBb;AAHjD,OAAP;;AAKF;AACE,aAAOG,KAAP;AA5CJ;AA8CD;;AAED,eAAeD,IAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["const initialState = {\n  items: {},\n  totalPrice: 0,\n  itemCount: 0,\n};\n\nfunction cart(state = initialState, action) {\n  function getTotalPrice(arr) {\n    arr.reduce((sum, obj) => obj.price + sum, 0);\n  }\n\n  switch (action.type) {\n    case 'ADD_PIZZAS':\n      const currentPizzaItems = !state.items[action.payload.id]\n        ? [action.payload]\n        : [...state.items[action.payload.id].items, action.payload];\n\n      const newItems = {\n        ...state.items,\n        [action.payload.id]: {\n          items: currentPizzaItems,\n          totalPrice: currentPizzaItems.reduce((sum, obj) => obj.price + sum, 0),\n          totalCount: currentPizzaItems.length,\n        },\n      };\n      const totalArr = [].concat.apply(\n        [],\n        Object.values(newItems).map((obj) => obj.items),\n      );\n\n      return {\n        ...state,\n        items: newItems,\n        itemCount: totalArr.length,\n        totalPrice: totalArr.reduce((sum, obj) => obj.price + sum, 0),\n      };\n\n    case 'CLEAR_CART':\n      return {\n        items: {},\n        itemCount: 0,\n        totalPrice: 0,\n      };\n\n    case 'REMOVE_CART_ITEM':\n      const newObj = {\n        ...state.items,\n      };\n      delete newObj[action.payload];\n      return {\n        ...state,\n        items: newObj,\n        totalPrice: state.totalPrice - newObj[action.payload].totalPrice,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default cart;\n\n// if (action.type === 'SET_TOTALPRICE') {\n//   return {\n//     ...state,\n//     totalPrice: action.payload,\n//   };\n// }\n\n// if (action.type === 'SET_COUNT') {\n//   return {\n//     ...state,\n//     itemCount: action.payload,\n//   };\n// }\n"]},"metadata":{},"sourceType":"module"}