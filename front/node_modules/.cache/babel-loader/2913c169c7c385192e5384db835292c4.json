{"ast":null,"code":"const initialState = {\n  items: {},\n  totalPrice: 0,\n  itemCount: 0\n};\n\nfunction cart(state = initialState, action) {\n  function getTotalPrice(arr) {\n    return arr.reduce((sum, obj) => obj.price + sum, 0);\n  }\n\n  switch (action.type) {\n    case 'ADD_PIZZAS':\n      {\n        const currentPizzaItems = !state.items[action.payload.id] ? [action.payload] : [...state.items[action.payload.id].items, action.payload];\n        const newItems = { ...state.items,\n          [action.payload.id]: {\n            items: currentPizzaItems,\n            totalPrice: getTotalPrice(currentPizzaItems),\n            totalCount: currentPizzaItems.length\n          }\n        };\n        const totalArr = [].concat.apply([], Object.values(newItems).map(obj => obj.items));\n        return { ...state,\n          items: newItems,\n          itemCount: totalArr.length,\n          totalPrice: getTotalPrice(totalArr)\n        };\n      }\n\n    case 'CLEAR_CART':\n      return {\n        items: {},\n        itemCount: 0,\n        totalPrice: 0\n      };\n\n    case 'REMOVE_CART_ITEM':\n      {\n        const newItems = { ...state.items\n        };\n        const currentTotalPrice = newItems[action.payload].totalPrice;\n        const currentTotalCount = newItems[action.payload].totalCount;\n        delete newItems[action.payload];\n        return { ...state,\n          items: newItems,\n          totalPrice: state.totalPrice - currentTotalPrice,\n          itemCount: state.itemCount - currentTotalCount\n        };\n      }\n\n    case 'INCREMENT':\n      {\n        const newItems = [...state.items[action.payload].items, state.items[action.payload].items[0]];\n        const newObj = { ...state.items,\n          [action.payload]: {\n            items: newItems,\n            totalPrice: getTotalPrice(newItems),\n            totalCount: newItems.length\n          }\n        };\n        const totalArr = [].concat.apply([], Object.values(newObj).map(obj => obj.items));\n        return { ...state,\n          items: newObj,\n          totalPrice: getTotalPrice(totalArr),\n          itemCount: totalArr.length\n        };\n      }\n\n    case 'DECREMENT':\n      {\n        const oldItems = state.items[action.payload].items;\n        const newItems = oldItems.length > 1 ? state.items[action.payload].items.slice(1) : oldItems;\n        const newObj = { ...state.items,\n          [action.payload]: {\n            items: newItems,\n            totalPrice: newItems.reduce((sum, obj) => obj.price + sum, 0),\n            totalCount: newItems.length\n          }\n        };\n        const totalArr = [].concat.apply([], Object.values(newObj).map(obj => obj.items));\n        return { ...state,\n          items: newObj,\n          totalPrice: getTotalPrice(totalArr),\n          itemCount: totalArr.length\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default cart;","map":{"version":3,"sources":["/home/ariet/project/pizza_shop/src/redux/reducers/cart.js"],"names":["initialState","items","totalPrice","itemCount","cart","state","action","getTotalPrice","arr","reduce","sum","obj","price","type","currentPizzaItems","payload","id","newItems","totalCount","length","totalArr","concat","apply","Object","values","map","currentTotalPrice","currentTotalCount","newObj","oldItems","slice"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,UAAU,EAAE,CAFO;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;;AAMA,SAASC,IAAT,CAAcC,KAAK,GAAGL,YAAtB,EAAoCM,MAApC,EAA4C;AAC1C,WAASC,aAAT,CAAuBC,GAAvB,EAA4B;AAC1B,WAAOA,GAAG,CAACC,MAAJ,CAAW,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,KAAJ,GAAYF,GAArC,EAA0C,CAA1C,CAAP;AACD;;AAED,UAAQJ,MAAM,CAACO,IAAf;AACE,SAAK,YAAL;AAAmB;AACjB,cAAMC,iBAAiB,GAAG,CAACT,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACS,OAAP,CAAeC,EAA3B,CAAD,GACtB,CAACV,MAAM,CAACS,OAAR,CADsB,GAEtB,CAAC,GAAGV,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACS,OAAP,CAAeC,EAA3B,EAA+Bf,KAAnC,EAA0CK,MAAM,CAACS,OAAjD,CAFJ;AAIA,cAAME,QAAQ,GAAG,EACf,GAAGZ,KAAK,CAACJ,KADM;AAEf,WAACK,MAAM,CAACS,OAAP,CAAeC,EAAhB,GAAqB;AACnBf,YAAAA,KAAK,EAAEa,iBADY;AAEnBZ,YAAAA,UAAU,EAAEK,aAAa,CAACO,iBAAD,CAFN;AAGnBI,YAAAA,UAAU,EAAEJ,iBAAiB,CAACK;AAHX;AAFN,SAAjB;AAQA,cAAMC,QAAQ,GAAG,GAAGC,MAAH,CAAUC,KAAV,CACf,EADe,EAEfC,MAAM,CAACC,MAAP,CAAcP,QAAd,EAAwBQ,GAAxB,CAA6Bd,GAAD,IAASA,GAAG,CAACV,KAAzC,CAFe,CAAjB;AAKA,eAAO,EACL,GAAGI,KADE;AAELJ,UAAAA,KAAK,EAAEgB,QAFF;AAGLd,UAAAA,SAAS,EAAEiB,QAAQ,CAACD,MAHf;AAILjB,UAAAA,UAAU,EAAEK,aAAa,CAACa,QAAD;AAJpB,SAAP;AAMD;;AAED,SAAK,YAAL;AACE,aAAO;AACLnB,QAAAA,KAAK,EAAE,EADF;AAELE,QAAAA,SAAS,EAAE,CAFN;AAGLD,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAMF,SAAK,kBAAL;AAAyB;AACvB,cAAMe,QAAQ,GAAG,EACf,GAAGZ,KAAK,CAACJ;AADM,SAAjB;AAIA,cAAMyB,iBAAiB,GAAGT,QAAQ,CAACX,MAAM,CAACS,OAAR,CAAR,CAAyBb,UAAnD;AACA,cAAMyB,iBAAiB,GAAGV,QAAQ,CAACX,MAAM,CAACS,OAAR,CAAR,CAAyBG,UAAnD;AAEA,eAAOD,QAAQ,CAACX,MAAM,CAACS,OAAR,CAAf;AAEA,eAAO,EACL,GAAGV,KADE;AAELJ,UAAAA,KAAK,EAAEgB,QAFF;AAGLf,UAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,GAAmBwB,iBAH1B;AAILvB,UAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,GAAkBwB;AAJxB,SAAP;AAMD;;AACD,SAAK,WAAL;AAAkB;AAChB,cAAMV,QAAQ,GAAG,CAAC,GAAGZ,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACS,OAAnB,EAA4Bd,KAAhC,EAAuCI,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACS,OAAnB,EAA4Bd,KAA5B,CAAkC,CAAlC,CAAvC,CAAjB;AAEA,cAAM2B,MAAM,GAAG,EACb,GAAGvB,KAAK,CAACJ,KADI;AAEb,WAACK,MAAM,CAACS,OAAR,GAAkB;AAChBd,YAAAA,KAAK,EAAEgB,QADS;AAEhBf,YAAAA,UAAU,EAAEK,aAAa,CAACU,QAAD,CAFT;AAGhBC,YAAAA,UAAU,EAAED,QAAQ,CAACE;AAHL;AAFL,SAAf;AASA,cAAMC,QAAQ,GAAG,GAAGC,MAAH,CAAUC,KAAV,CACf,EADe,EAEfC,MAAM,CAACC,MAAP,CAAcI,MAAd,EAAsBH,GAAtB,CAA2Bd,GAAD,IAASA,GAAG,CAACV,KAAvC,CAFe,CAAjB;AAKA,eAAO,EACL,GAAGI,KADE;AAELJ,UAAAA,KAAK,EAAE2B,MAFF;AAGL1B,UAAAA,UAAU,EAAEK,aAAa,CAACa,QAAD,CAHpB;AAILjB,UAAAA,SAAS,EAAEiB,QAAQ,CAACD;AAJf,SAAP;AAMD;;AAED,SAAK,WAAL;AAAkB;AAChB,cAAMU,QAAQ,GAAGxB,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACS,OAAnB,EAA4Bd,KAA7C;AAEA,cAAMgB,QAAQ,GAAGY,QAAQ,CAACV,MAAT,GAAkB,CAAlB,GAAsBd,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACS,OAAnB,EAA4Bd,KAA5B,CAAkC6B,KAAlC,CAAwC,CAAxC,CAAtB,GAAmED,QAApF;AAEA,cAAMD,MAAM,GAAG,EACb,GAAGvB,KAAK,CAACJ,KADI;AAEb,WAACK,MAAM,CAACS,OAAR,GAAkB;AAChBd,YAAAA,KAAK,EAAEgB,QADS;AAEhBf,YAAAA,UAAU,EAAEe,QAAQ,CAACR,MAAT,CAAgB,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,KAAJ,GAAYF,GAA1C,EAA+C,CAA/C,CAFI;AAGhBQ,YAAAA,UAAU,EAAED,QAAQ,CAACE;AAHL;AAFL,SAAf;AASA,cAAMC,QAAQ,GAAG,GAAGC,MAAH,CAAUC,KAAV,CACf,EADe,EAEfC,MAAM,CAACC,MAAP,CAAcI,MAAd,EAAsBH,GAAtB,CAA2Bd,GAAD,IAASA,GAAG,CAACV,KAAvC,CAFe,CAAjB;AAKA,eAAO,EACL,GAAGI,KADE;AAELJ,UAAAA,KAAK,EAAE2B,MAFF;AAGL1B,UAAAA,UAAU,EAAEK,aAAa,CAACa,QAAD,CAHpB;AAILjB,UAAAA,SAAS,EAAEiB,QAAQ,CAACD;AAJf,SAAP;AAMD;;AAED;AACE,aAAOd,KAAP;AAxGJ;AA0GD;;AAED,eAAeD,IAAf","sourcesContent":["const initialState = {\n  items: {},\n  totalPrice: 0,\n  itemCount: 0,\n};\n\nfunction cart(state = initialState, action) {\n  function getTotalPrice(arr) {\n    return arr.reduce((sum, obj) => obj.price + sum, 0);\n  }\n\n  switch (action.type) {\n    case 'ADD_PIZZAS': {\n      const currentPizzaItems = !state.items[action.payload.id]\n        ? [action.payload]\n        : [...state.items[action.payload.id].items, action.payload];\n\n      const newItems = {\n        ...state.items,\n        [action.payload.id]: {\n          items: currentPizzaItems,\n          totalPrice: getTotalPrice(currentPizzaItems),\n          totalCount: currentPizzaItems.length,\n        },\n      };\n      const totalArr = [].concat.apply(\n        [],\n        Object.values(newItems).map((obj) => obj.items),\n      );\n\n      return {\n        ...state,\n        items: newItems,\n        itemCount: totalArr.length,\n        totalPrice: getTotalPrice(totalArr),\n      };\n    }\n\n    case 'CLEAR_CART':\n      return {\n        items: {},\n        itemCount: 0,\n        totalPrice: 0,\n      };\n\n    case 'REMOVE_CART_ITEM': {\n      const newItems = {\n        ...state.items,\n      };\n\n      const currentTotalPrice = newItems[action.payload].totalPrice;\n      const currentTotalCount = newItems[action.payload].totalCount;\n\n      delete newItems[action.payload];\n\n      return {\n        ...state,\n        items: newItems,\n        totalPrice: state.totalPrice - currentTotalPrice,\n        itemCount: state.itemCount - currentTotalCount,\n      };\n    }\n    case 'INCREMENT': {\n      const newItems = [...state.items[action.payload].items, state.items[action.payload].items[0]];\n\n      const newObj = {\n        ...state.items,\n        [action.payload]: {\n          items: newItems,\n          totalPrice: getTotalPrice(newItems),\n          totalCount: newItems.length,\n        },\n      };\n\n      const totalArr = [].concat.apply(\n        [],\n        Object.values(newObj).map((obj) => obj.items),\n      );\n\n      return {\n        ...state,\n        items: newObj,\n        totalPrice: getTotalPrice(totalArr),\n        itemCount: totalArr.length,\n      };\n    }\n\n    case 'DECREMENT': {\n      const oldItems = state.items[action.payload].items;\n\n      const newItems = oldItems.length > 1 ? state.items[action.payload].items.slice(1) : oldItems;\n\n      const newObj = {\n        ...state.items,\n        [action.payload]: {\n          items: newItems,\n          totalPrice: newItems.reduce((sum, obj) => obj.price + sum, 0),\n          totalCount: newItems.length,\n        },\n      };\n\n      const totalArr = [].concat.apply(\n        [],\n        Object.values(newObj).map((obj) => obj.items),\n      );\n\n      return {\n        ...state,\n        items: newObj,\n        totalPrice: getTotalPrice(totalArr),\n        itemCount: totalArr.length,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default cart;\n"]},"metadata":{},"sourceType":"module"}