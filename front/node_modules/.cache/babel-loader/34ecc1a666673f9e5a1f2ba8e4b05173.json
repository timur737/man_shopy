{"ast":null,"code":"import axios from 'axios';\nimport Condition from 'yup/lib/Condition'; // const meFromToken = (tokenFromStorage) => (dispatch) => {\n//   axios\n//     .get(`https://jastegri.pythonanywhere.com/auth/users/me/`, {\n//       headers: { Authorization: `Bearer ${tokenFromStorage}` },\n//     })\n//     .then(({ data }) => {\n//       // localStorage.setItem('token', JSON.stringify(data.tokens));\n//       dispatch(reloadToken(data));\n//     })\n//     .catch((err) => console.log(err.message));\n// };\n// const reloadToken = (data) => ({\n//   type: 'ME_FROM_TOKEN',\n//   payload: data,\n// });\n\nexport async function meFromToken(tokenFromStorage) {\n  //check if the token is still valid, if so, get me from the server\n  return {\n    type: 'ME_FROM_TOKEN',\n    payload: axios({\n      method: 'get',\n      url: `https://jastegri.pythonanywhere.com/auth/users/me/`,\n      headers: {\n        Authorization: `Bearer ${tokenFromStorage}`\n      }\n    })\n  };\n}\nexport function meFromTokenSuccess(currentUser) {\n  return {\n    type: 'ME_FROM_TOKEN_SUCCESS',\n    payload: currentUser\n  };\n}\nexport function meFromTokenFailure(error) {\n  return {\n    type: 'ME_FROM_TOKEN_FAILURE',\n    payload: error\n  };\n} // export { meFromToken };\n// https://github.com/rajaraodv/react-redux-blog","map":{"version":3,"sources":["/home/ariet/project/pizza_shop/src/redux/actions/reload.js"],"names":["axios","Condition","meFromToken","tokenFromStorage","type","payload","method","url","headers","Authorization","meFromTokenSuccess","currentUser","meFromTokenFailure","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,OAAO,eAAeC,WAAf,CAA2BC,gBAA3B,EAA6C;AAClD;AAEA,SAAO;AACLC,IAAAA,IAAI,EAAE,eADD;AAELC,IAAAA,OAAO,EAAEL,KAAK,CAAC;AACbM,MAAAA,MAAM,EAAE,KADK;AAEbC,MAAAA,GAAG,EAAG,oDAFO;AAGbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASN,gBAAiB;AADnC;AAHI,KAAD;AAFT,GAAP;AAUD;AAED,OAAO,SAASO,kBAAT,CAA4BC,WAA5B,EAAyC;AAC9C,SAAO;AACLP,IAAAA,IAAI,EAAE,uBADD;AAELC,IAAAA,OAAO,EAAEM;AAFJ,GAAP;AAID;AAED,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACxC,SAAO;AACLT,IAAAA,IAAI,EAAE,uBADD;AAELC,IAAAA,OAAO,EAAEQ;AAFJ,GAAP;AAID,C,CAED;AAEA","sourcesContent":["import axios from 'axios';\nimport Condition from 'yup/lib/Condition';\n\n// const meFromToken = (tokenFromStorage) => (dispatch) => {\n//   axios\n//     .get(`https://jastegri.pythonanywhere.com/auth/users/me/`, {\n//       headers: { Authorization: `Bearer ${tokenFromStorage}` },\n//     })\n//     .then(({ data }) => {\n//       // localStorage.setItem('token', JSON.stringify(data.tokens));\n\n//       dispatch(reloadToken(data));\n//     })\n//     .catch((err) => console.log(err.message));\n// };\n\n// const reloadToken = (data) => ({\n//   type: 'ME_FROM_TOKEN',\n//   payload: data,\n// });\n\nexport async function meFromToken(tokenFromStorage) {\n  //check if the token is still valid, if so, get me from the server\n\n  return {\n    type: 'ME_FROM_TOKEN',\n    payload: axios({\n      method: 'get',\n      url: `https://jastegri.pythonanywhere.com/auth/users/me/`,\n      headers: {\n        Authorization: `Bearer ${tokenFromStorage}`,\n      },\n    }),\n  };\n}\n\nexport function meFromTokenSuccess(currentUser) {\n  return {\n    type: 'ME_FROM_TOKEN_SUCCESS',\n    payload: currentUser,\n  };\n}\n\nexport function meFromTokenFailure(error) {\n  return {\n    type: 'ME_FROM_TOKEN_FAILURE',\n    payload: error,\n  };\n}\n\n// export { meFromToken };\n\n// https://github.com/rajaraodv/react-redux-blog\n"]},"metadata":{},"sourceType":"module"}