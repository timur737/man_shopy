{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ariet/project/pizza_shop/src/pages/Registration.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { fetchUser } from '../redux/actions/registration';\n\nfunction Registration() {\n  _s();\n\n  const dispatch = useDispatch();\n  const initState = {\n    username: '',\n    password: ''\n  };\n  const validationSchema = yup.object().shape({\n    name: yup.string().typeError('aaaaaa').required('ddd')\n  });\n  const [state, setState] = React.useState(initState);\n\n  const handleChange = event => {\n    setState({\n      [event.target.name]: event.target.value\n    }); // console.log(initState);\n  };\n\n  const ffhandleSubmit = event => {\n    event.preventDefault();\n    console.log(state);\n  }; // const regisHandler = (event) => {\n  //   console.log({ username, password });\n  //   dispatch(fetchUser({ username, password }));\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: '',\n        secondName: '',\n        password: '',\n        confirmPassword: '',\n        email: ''\n      },\n      validateOnBlur: true,\n      validationSchema: validationSchema,\n      onSubmit: ffhandleSubmit,\n      children: ({\n        values,\n        errors,\n        touched,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isValid,\n        dirty\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"name\",\n          type: \"text\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), touched.name && errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"input\",\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !isValid && !dirty,\n          onClick: handleSubmit,\n          type: \"submit\",\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Registration, \"eZbub8xKt+wxLH2OvVhsPwxB4ZY=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/home/ariet/project/pizza_shop/src/pages/Registration.js"],"names":["React","yup","Formik","useDispatch","fetchUser","Registration","dispatch","initState","username","password","validationSchema","object","shape","name","string","typeError","required","state","setState","useState","handleChange","event","target","value","ffhandleSubmit","preventDefault","console","log","secondName","confirmPassword","email","values","errors","touched","handleBlur","handleSubmit","isValid","dirty"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,SAAT,QAA0B,+BAA1B;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,SAAS,GAAG;AAChBC,IAAAA,QAAQ,EAAE,EADM;AAEhBC,IAAAA,QAAQ,EAAE;AAFM,GAAlB;AAKA,QAAMC,gBAAgB,GAAGT,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,IAAAA,IAAI,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,SAAb,CAAuB,QAAvB,EAAiCC,QAAjC,CAA0C,KAA1C;AADoC,GAAnB,CAAzB;AAIA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,KAAK,CAACmB,QAAN,CAAeZ,SAAf,CAA1B;;AAEA,QAAMa,YAAY,GAAIC,KAAD,IAAW;AAC9BH,IAAAA,QAAQ,CAAC;AAAE,OAACG,KAAK,CAACC,MAAN,CAAaT,IAAd,GAAqBQ,KAAK,CAACC,MAAN,CAAaC;AAApC,KAAD,CAAR,CAD8B,CAE9B;AACD,GAHD;;AAKA,QAAMC,cAAc,GAAIH,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACI,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACD,GAHD,CAlBsB,CAuBtB;AACA;AAEA;AACA;;;AAEA,sBACE;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACbJ,QAAAA,IAAI,EAAE,EADO;AAEbe,QAAAA,UAAU,EAAE,EAFC;AAGbnB,QAAAA,QAAQ,EAAE,EAHG;AAIboB,QAAAA,eAAe,EAAE,EAJJ;AAKbC,QAAAA,KAAK,EAAE;AALM,OADjB;AAQE,MAAA,cAAc,MARhB;AASE,MAAA,gBAAgB,EAAEpB,gBATpB;AAUE,MAAA,QAAQ,EAAEc,cAVZ;AAAA,gBAWG,CAAC;AAAEO,QAAAA,MAAF;AAAUC,QAAAA,MAAV;AAAkBC,QAAAA,OAAlB;AAA2BC,QAAAA,UAA3B;AAAuCd,QAAAA,YAAvC;AAAqDe,QAAAA,YAArD;AAAmEC,QAAAA,OAAnE;AAA4EC,QAAAA;AAA5E,OAAD,kBACC;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,QAAQ,EAAEjB,YAHZ;AAIE,UAAA,MAAM,EAAEc,UAJV;AAKE,UAAA,KAAK,EAAEH,MAAM,CAAClB;AALhB;AAAA;AAAA;AAAA;AAAA,gBAFF,EASGoB,OAAO,CAACpB,IAAR,IAAgBmB,MAAM,CAACnB,IAAvB,iBAA+B;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA,oBAAsBmB,MAAM,CAACnB;AAA7B;AAAA;AAAA;AAAA;AAAA,gBATlC,eAUE;AAAQ,UAAA,QAAQ,EAAE,CAACuB,OAAD,IAAY,CAACC,KAA/B;AAAsC,UAAA,OAAO,EAAEF,YAA/C;AAA6D,UAAA,IAAI,EAAC,QAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GA7DQ9B,Y;UACUF,W;;;KADVE,Y;AA+DT,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchUser } from '../redux/actions/registration';\n\nfunction Registration() {\n  const dispatch = useDispatch();\n  const initState = {\n    username: '',\n    password: '',\n  };\n\n  const validationSchema = yup.object().shape({\n    name: yup.string().typeError('aaaaaa').required('ddd'),\n  });\n\n  const [state, setState] = React.useState(initState);\n\n  const handleChange = (event) => {\n    setState({ [event.target.name]: event.target.value });\n    // console.log(initState);\n  };\n\n  const ffhandleSubmit = (event) => {\n    event.preventDefault();\n    console.log(state);\n  };\n\n  // const regisHandler = (event) => {\n  //   console.log({ username, password });\n\n  //   dispatch(fetchUser({ username, password }));\n  // };\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          name: '',\n          secondName: '',\n          password: '',\n          confirmPassword: '',\n          email: '',\n        }}\n        validateOnBlur\n        validationSchema={validationSchema}\n        onSubmit={ffhandleSubmit}>\n        {({ values, errors, touched, handleBlur, handleChange, handleSubmit, isValid, dirty }) => (\n          <div className=\"form\">\n            <p>Name</p>\n            <input\n              name=\"name\"\n              type=\"text\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.name}\n            />\n            {touched.name && errors.name && <p className=\"input\">{errors.name}</p>}\n            <button disabled={!isValid && !dirty} onClick={handleSubmit} type=\"submit\">\n              Отправить\n            </button>\n          </div>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default Registration;\n"]},"metadata":{},"sourceType":"module"}