{"ast":null,"code":"import axios from 'axios';\nconst url = 'https://jastegri.pythonanywhere.com';\nexport const signUpUser = user => dispatch => {\n  dispatch(signUpUserStarted());\n  axios.post(`${url}/auth/users/`, user).then(res => {\n    if (res.status >= 400) {\n      console.log(res);\n    }\n  }).then(res => {\n    console.log(res);\n    localStorage.setItem('token', JSON.stringify(res.data.tokens));\n    dispatch(signUpUserSuccess(res.data));\n  }).catch(error => {\n    // Error\n    if (error.response) {\n      dispatch(signUpUserFailure(Object.values(error.response.data)[0])); // dispatch(signUpUserFailure(error.response.data.email));\n      // dispatch(signUpUserFailure(error.response.data.username));\n\n      console.log(error.response.data);\n    } else if (error.request) {\n      console.log(error.request);\n    } else {\n      console.log('Error', error.message);\n      dispatch(signUpUserFailure(error.message));\n    }\n  });\n};\n\nconst signUpUserStarted = () => ({\n  type: 'SIGNUP_USER'\n});\n\nconst signUpUserSuccess = user => ({\n  type: 'SIGNUP_USER_SUCCESS',\n  payload: user\n});\n\nconst signUpUserFailure = error => ({\n  type: 'SIGNUP_USER_FAILURE',\n  payload: error\n});\n\nexport const meFromToken = tokenFromStorage => dispatch => {\n  dispatch(meFromTokenStarted());\n  axios.get(`${url}/auth/users/me/`, {\n    headers: {\n      Authorization: `Bearer ${tokenFromStorage}`\n    }\n  }).then(res => {\n    // localStorage.setItem('token', res.data.tokens);\n    dispatch(meFromTokenSuccess(res.data));\n  }).catch(err => {\n    localStorage.removeItem('token');\n    dispatch(meFromTokenFailure(err.message));\n  });\n};\n\nconst meFromTokenStarted = () => ({\n  type: 'ME_FROM_TOKEN'\n});\n\nconst meFromTokenSuccess = user => ({\n  type: 'ME_FROM_TOKEN_SUCCESS',\n  payload: user\n});\n\nconst meFromTokenFailure = error => ({\n  type: 'ME_FROM_TOKEN_FAILURE',\n  payload: error\n});\n\nexport const loginUser = user => dispatch => {\n  dispatch(loginUserStarted());\n  axios.post(`${url}/login/`, user).then(({\n    data\n  }) => {\n    const tokens = {\n      refresh: data.refresh,\n      access: data.access\n    };\n    localStorage.setItem('token', JSON.stringify(tokens));\n    dispatch(loginUserSuccess(data));\n  }).catch(err => {\n    dispatch(loginUserFailure(err.message));\n  });\n};\n\nconst loginUserStarted = () => ({\n  type: 'LOGIN_USER'\n});\n\nconst loginUserSuccess = user => ({\n  type: 'LOGIN_USER_SUCCESS',\n  payload: user\n});\n\nconst loginUserFailure = error => ({\n  type: 'LOGIN_USER_FAILURE',\n  payload: error\n});\n\nexport const editUser = user => dispatch => {\n  dispatch(editUserStarted());\n  axios.get(`${url}/edit/`, user).then(({\n    data\n  }) => {\n    // localStorage.setItem('token', JSON.stringify(data.tokens));\n    dispatch(editUserSuccess(data));\n  }).catch(err => {\n    dispatch(editUserFailure(err.message));\n  });\n};\n\nconst editUserStarted = data => ({\n  type: 'EDIT_USER',\n  payload: data\n});\n\nconst editUserSuccess = user => ({\n  type: 'EDIT_USER_SUCCESS',\n  payload: user\n});\n\nconst editUserFailure = error => ({\n  type: 'EDIT_USER_FAILURE',\n  payload: error\n});\n\nexport const logoutUser = () => ({\n  type: 'LOGOUT_USER'\n});","map":{"version":3,"sources":["/home/ariet/project/pizza_shop/src/redux/actions/user.js"],"names":["axios","url","signUpUser","user","dispatch","signUpUserStarted","post","then","res","status","console","log","localStorage","setItem","JSON","stringify","data","tokens","signUpUserSuccess","catch","error","response","signUpUserFailure","Object","values","request","message","type","payload","meFromToken","tokenFromStorage","meFromTokenStarted","get","headers","Authorization","meFromTokenSuccess","err","removeItem","meFromTokenFailure","loginUser","loginUserStarted","refresh","access","loginUserSuccess","loginUserFailure","editUser","editUserStarted","editUserSuccess","editUserFailure","logoutUser"],"mappings":"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","sourcesContent":["import axios from 'axios';\nconst url = 'https://jastegri.pythonanywhere.com';\n\nexport const signUpUser = (user) => (dispatch) => {\n  dispatch(signUpUserStarted());\n\n  axios\n    .post(`${url}/auth/users/`, user)\n    .then((res) => {\n      if (res.status >= 400) {\n        console.log(res);\n      }\n    })\n    .then((res) => {\n      console.log(res);\n      localStorage.setItem('token', JSON.stringify(res.data.tokens));\n      dispatch(signUpUserSuccess(res.data));\n    })\n    .catch((error) => {\n      // Error\n      if (error.response) {\n        dispatch(signUpUserFailure(Object.values(error.response.data)[0]));\n        // dispatch(signUpUserFailure(error.response.data.email));\n        // dispatch(signUpUserFailure(error.response.data.username));\n        console.log(error.response.data);\n      } else if (error.request) {\n        console.log(error.request);\n      } else {\n        console.log('Error', error.message);\n        dispatch(signUpUserFailure(error.message));\n      }\n    });\n};\n\nconst signUpUserStarted = () => ({\n  type: 'SIGNUP_USER',\n});\n\nconst signUpUserSuccess = (user) => ({\n  type: 'SIGNUP_USER_SUCCESS',\n  payload: user,\n});\n\nconst signUpUserFailure = (error) => ({\n  type: 'SIGNUP_USER_FAILURE',\n  payload: error,\n});\n\nexport const meFromToken = (tokenFromStorage) => (dispatch) => {\n  dispatch(meFromTokenStarted());\n\n  axios\n    .get(`${url}/auth/users/me/`, {\n      headers: { Authorization: `Bearer ${tokenFromStorage}` },\n    })\n    .then((res) => {\n      // localStorage.setItem('token', res.data.tokens);\n      dispatch(meFromTokenSuccess(res.data));\n    })\n    .catch((err) => {\n      localStorage.removeItem('token');\n      dispatch(meFromTokenFailure(err.message));\n    });\n};\n\nconst meFromTokenStarted = () => ({\n  type: 'ME_FROM_TOKEN',\n});\n\nconst meFromTokenSuccess = (user) => ({\n  type: 'ME_FROM_TOKEN_SUCCESS',\n  payload: user,\n});\n\nconst meFromTokenFailure = (error) => ({\n  type: 'ME_FROM_TOKEN_FAILURE',\n  payload: error,\n});\n\nexport const loginUser = (user) => (dispatch) => {\n  dispatch(loginUserStarted());\n\n  axios\n    .post(`${url}/login/`, user)\n    .then(({ data }) => {\n      const tokens = {\n        refresh: data.refresh,\n        access: data.access,\n      };\n\n      localStorage.setItem('token', JSON.stringify(tokens));\n      dispatch(loginUserSuccess(data));\n    })\n    .catch((err) => {\n      dispatch(loginUserFailure(err.message));\n    });\n};\n\nconst loginUserStarted = () => ({\n  type: 'LOGIN_USER',\n});\n\nconst loginUserSuccess = (user) => ({\n  type: 'LOGIN_USER_SUCCESS',\n  payload: user,\n});\n\nconst loginUserFailure = (error) => ({\n  type: 'LOGIN_USER_FAILURE',\n  payload: error,\n});\n\nexport const editUser = (user) => (dispatch) => {\n  dispatch(editUserStarted());\n\n  axios\n    .get(`${url}/edit/`, user)\n    .then(({ data }) => {\n      // localStorage.setItem('token', JSON.stringify(data.tokens));\n      dispatch(editUserSuccess(data));\n    })\n    .catch((err) => {\n      dispatch(editUserFailure(err.message));\n    });\n};\n\nconst editUserStarted = (data) => ({\n  type: 'EDIT_USER',\n  payload: data,\n});\n\nconst editUserSuccess = (user) => ({\n  type: 'EDIT_USER_SUCCESS',\n  payload: user,\n});\n\nconst editUserFailure = (error) => ({\n  type: 'EDIT_USER_FAILURE',\n  payload: error,\n});\n\nexport const logoutUser = () => ({\n  type: 'LOGOUT_USER',\n});\n"]},"metadata":{},"sourceType":"module"}