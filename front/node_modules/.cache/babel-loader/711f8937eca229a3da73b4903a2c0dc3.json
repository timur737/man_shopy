{"ast":null,"code":"import { array } from 'prop-types';\nconst initialState = {\n  items: {},\n  totalPrice: 0,\n  itemCount: 0\n};\n\nfunction cart(state = initialState, action) {\n  if (action.type === 'SET_TOTALPRICE') {\n    return { ...state,\n      totalPrice: action.payload\n    };\n  }\n\n  if (action.type === 'SET_COUNT') {\n    return { ...state,\n      itemCount: action.payload\n    };\n  }\n\n  function getTotalPrice(arr) {\n    arr.reduce((sum, obj) => obj.price + sum, 0);\n  }\n\n  switch (action.type) {\n    case 'ADD_PIZZAS':\n      const currentPizzaItems = !state.items[action.payload.id] ? [action.payload] : [...state.items[action.payload.id].items, action.payload];\n      const newItems = { ...state.items,\n        [action.payload.id]: {\n          items: currentPizzaItems,\n          totalPrice: currentPizzaItems.reduce((sum, obj) => obj.price + sum, 0),\n          totalCount: currentPizzaItems.length\n        }\n      };\n      const totalArr = [].concat.apply([], Object.values(newItems).map(obj => obj.items));\n      return { ...state,\n        items: newItems,\n        itemCount: totalArr.length,\n        totalPrice: totalArr.reduce((sum, obj) => obj.price + sum, 0)\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default cart;","map":{"version":3,"sources":["/home/ariet/project/pizza_shop/src/redux/reducers/cart.js"],"names":["array","initialState","items","totalPrice","itemCount","cart","state","action","type","payload","getTotalPrice","arr","reduce","sum","obj","price","currentPizzaItems","id","newItems","totalCount","length","totalArr","concat","apply","Object","values","map"],"mappings":"AAAA,SAASA,KAAT,QAAsB,YAAtB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,UAAU,EAAE,CAFO;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;;AAMA,SAASC,IAAT,CAAcC,KAAK,GAAGL,YAAtB,EAAoCM,MAApC,EAA4C;AAC1C,MAAIA,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAsC;AACpC,WAAO,EACL,GAAGF,KADE;AAELH,MAAAA,UAAU,EAAEI,MAAM,CAACE;AAFd,KAAP;AAID;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO,EACL,GAAGF,KADE;AAELF,MAAAA,SAAS,EAAEG,MAAM,CAACE;AAFb,KAAP;AAID;;AAED,WAASC,aAAT,CAAuBC,GAAvB,EAA4B;AAC1BA,IAAAA,GAAG,CAACC,MAAJ,CAAW,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,KAAJ,GAAYF,GAArC,EAA0C,CAA1C;AACD;;AAED,UAAQN,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,YAAMQ,iBAAiB,GAAG,CAACV,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACE,OAAP,CAAeQ,EAA3B,CAAD,GACtB,CAACV,MAAM,CAACE,OAAR,CADsB,GAEtB,CAAC,GAAGH,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACE,OAAP,CAAeQ,EAA3B,EAA+Bf,KAAnC,EAA0CK,MAAM,CAACE,OAAjD,CAFJ;AAIA,YAAMS,QAAQ,GAAG,EACf,GAAGZ,KAAK,CAACJ,KADM;AAEf,SAACK,MAAM,CAACE,OAAP,CAAeQ,EAAhB,GAAqB;AACnBf,UAAAA,KAAK,EAAEc,iBADY;AAEnBb,UAAAA,UAAU,EAAEa,iBAAiB,CAACJ,MAAlB,CAAyB,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,KAAJ,GAAYF,GAAnD,EAAwD,CAAxD,CAFO;AAGnBM,UAAAA,UAAU,EAAEH,iBAAiB,CAACI;AAHX;AAFN,OAAjB;AAQA,YAAMC,QAAQ,GAAG,GAAGC,MAAH,CAAUC,KAAV,CACf,EADe,EAEfC,MAAM,CAACC,MAAP,CAAcP,QAAd,EAAwBQ,GAAxB,CAA6BZ,GAAD,IAASA,GAAG,CAACZ,KAAzC,CAFe,CAAjB;AAKA,aAAO,EACL,GAAGI,KADE;AAELJ,QAAAA,KAAK,EAAEgB,QAFF;AAGLd,QAAAA,SAAS,EAAEiB,QAAQ,CAACD,MAHf;AAILjB,QAAAA,UAAU,EAAEkB,QAAQ,CAACT,MAAT,CAAgB,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,KAAJ,GAAYF,GAA1C,EAA+C,CAA/C;AAJP,OAAP;;AAMF;AACE,aAAOP,KAAP;AA1BJ;AA4BD;;AAED,eAAeD,IAAf","sourcesContent":["import { array } from 'prop-types';\n\nconst initialState = {\n  items: {},\n  totalPrice: 0,\n  itemCount: 0,\n};\n\nfunction cart(state = initialState, action) {\n  if (action.type === 'SET_TOTALPRICE') {\n    return {\n      ...state,\n      totalPrice: action.payload,\n    };\n  }\n\n  if (action.type === 'SET_COUNT') {\n    return {\n      ...state,\n      itemCount: action.payload,\n    };\n  }\n\n  function getTotalPrice(arr) {\n    arr.reduce((sum, obj) => obj.price + sum, 0);\n  }\n\n  switch (action.type) {\n    case 'ADD_PIZZAS':\n      const currentPizzaItems = !state.items[action.payload.id]\n        ? [action.payload]\n        : [...state.items[action.payload.id].items, action.payload];\n\n      const newItems = {\n        ...state.items,\n        [action.payload.id]: {\n          items: currentPizzaItems,\n          totalPrice: currentPizzaItems.reduce((sum, obj) => obj.price + sum, 0),\n          totalCount: currentPizzaItems.length,\n        },\n      };\n      const totalArr = [].concat.apply(\n        [],\n        Object.values(newItems).map((obj) => obj.items),\n      );\n\n      return {\n        ...state,\n        items: newItems,\n        itemCount: totalArr.length,\n        totalPrice: totalArr.reduce((sum, obj) => obj.price + sum, 0),\n      };\n    default:\n      return state;\n  }\n}\n\nexport default cart;\n"]},"metadata":{},"sourceType":"module"}